npm verbose cli C:\Program Files\nodejs\node.exe C:\Users\aggis\AppData\Roaming\npm\node_modules\npm\bin\npm-cli.js
npm info using npm@11.2.0
npm info using node@v24.1.0
npm warn Unknown cli config "--testPathPattern". This will stop working in the next major version of npm.
npm verbose title npm test
npm verbose argv "test" "--testPathPattern" "GameRoom.test.ts" "--loglevel" "verbose"
npm verbose logfile logs-max:10 dir:C:\Users\aggis\AppData\Local\npm-cache\_logs\2025-06-06T15_57_57_498Z-
npm verbose logfile C:\Users\aggis\AppData\Local\npm-cache\_logs\2025-06-06T15_57_57_498Z-debug-0.log

> runerogue@0.1.0 test
> cross-env COLYSEUS_URI=ws://localhost:2567 jest --ci --runInBand

  console.info
    Ã”Â£Ã  .env.test loaded.

      at loadEnvFile (node_modules/@colyseus/tools/build/loadenv.js:46:15)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    xmxRMl0NS joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (xmxRMl0NS) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    waiting for reconnection for xmxRMl0NS

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    YILA4AcFS joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (YILA4AcFS) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    waiting for reconnection for YILA4AcFS

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    q7I06hokh joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (q7I06hokh) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Hfz_0vvX5 joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (Hfz_0vvX5) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    waiting for reconnection for Hfz_0vvX5

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    reconnected! reconnected_session_id

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1115:21)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.log
    eV62BDitC joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (eV62BDitC) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    _qHk2dxaz joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (_qHk2dxaz) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'eV62BDitC',
          username: 'Player1',
          x: 2,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479839,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'eV62BDitC',
          username: 'Player1',
          x: 2,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479839,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '_qHk2dxaz',
          username: 'Player2',
          x: 8,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479852,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '_qHk2dxaz',
          username: 'Player2',
          x: 8,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479852,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for _qHk2dxaz

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for eV62BDitC

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    r8Fa2NlQS joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (r8Fa2NlQS) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    chMMRfcBp joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (chMMRfcBp) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'r8Fa2NlQS',
          username: 'Player1',
          x: 4,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479924,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'r8Fa2NlQS',
          username: 'Player1',
          x: 4,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479924,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'chMMRfcBp',
          username: 'Player2',
          x: 6,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479936,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'chMMRfcBp',
          username: 'Player2',
          x: 6,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479936,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for chMMRfcBp

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for r8Fa2NlQS

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    SbfYAcDLe joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (SbfYAcDLe) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    gM6oJX_0H joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (gM6oJX_0H) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'SbfYAcDLe',
          username: 'Player1',
          x: 5,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479978,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'SbfYAcDLe',
          username: 'Player1',
          x: 5,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479978,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'gM6oJX_0H',
          username: 'Player2',
          x: 9,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479992,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'gM6oJX_0H',
          username: 'Player2',
          x: 9,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225479992,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for gM6oJX_0H

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for SbfYAcDLe

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    7p8ubd614 joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (7p8ubd614) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    64hphHpGf joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (64hphHpGf) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '7p8ubd614',
          username: 'Player1',
          x: 1,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480026,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '7p8ubd614',
          username: 'Player1',
          x: 1,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480026,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '64hphHpGf',
          username: 'Player2',
          x: 8,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480036,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '64hphHpGf',
          username: 'Player2',
          x: 8,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480036,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for 64hphHpGf

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for 7p8ubd614

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    qcq3G4RLR joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (qcq3G4RLR) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    RRH0L4VH0 joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (RRH0L4VH0) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'qcq3G4RLR',
          username: 'Player1',
          x: 1,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480075,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'qcq3G4RLR',
          username: 'Player1',
          x: 1,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480075,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'RRH0L4VH0',
          username: 'Player2',
          x: 2,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480085,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'RRH0L4VH0',
          username: 'Player2',
          x: 2,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480085,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for RRH0L4VH0

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for qcq3G4RLR

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    jSRFAyX1o joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (jSRFAyX1o) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    1AMbwwrIv joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (1AMbwwrIv) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'jSRFAyX1o',
          username: 'Player1',
          x: 5,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480117,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'jSRFAyX1o',
          username: 'Player1',
          x: 5,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480117,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '1AMbwwrIv',
          username: 'Player2',
          x: 9,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480128,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '1AMbwwrIv',
          username: 'Player2',
          x: 9,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480128,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for 1AMbwwrIv

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for jSRFAyX1o

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    qR0Hpv5v9 joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (qR0Hpv5v9) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TiqdRfY6I joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (TiqdRfY6I) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'qR0Hpv5v9',
          username: 'Player1',
          x: 9,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480162,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'qR0Hpv5v9',
          username: 'Player1',
          x: 9,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480162,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'TiqdRfY6I',
          username: 'Player2',
          x: 5,
          y: 0,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480172,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'TiqdRfY6I',
          username: 'Player2',
          x: 5,
          y: 0,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480172,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for TiqdRfY6I

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for qR0Hpv5v9

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    9cdF_Nsu7 joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (9cdF_Nsu7) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    43GovfAWO joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (43GovfAWO) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '9cdF_Nsu7',
          username: 'Player1',
          x: 1,
          y: 4,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480202,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '9cdF_Nsu7',
          username: 'Player1',
          x: 1,
          y: 4,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480202,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '43GovfAWO',
          username: 'Player2',
          x: 1,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480213,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '43GovfAWO',
          username: 'Player2',
          x: 1,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480213,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for 43GovfAWO

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for 9cdF_Nsu7

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    OcbkYQWoh joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (OcbkYQWoh) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    LeUZEOV9U joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (LeUZEOV9U) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'OcbkYQWoh',
          username: 'Player1',
          x: 8,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480248,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'OcbkYQWoh',
          username: 'Player1',
          x: 8,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480248,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'LeUZEOV9U',
          username: 'Player2',
          x: 0,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480259,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'LeUZEOV9U',
          username: 'Player2',
          x: 0,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480259,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for LeUZEOV9U

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for OcbkYQWoh

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    aUru-hrg2 joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player1 (aUru-hrg2) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    tWaaZCiS- joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player Player2 (tWaaZCiS-) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'aUru-hrg2',
          username: 'Player1',
          x: 0,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480289,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'aUru-hrg2',
          username: 'Player1',
          x: 0,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480289,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'tWaaZCiS-',
          username: 'Player2',
          x: 6,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480298,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'tWaaZCiS-',
          username: 'Player2',
          x: 6,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749225480298,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for tWaaZCiS-

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.log
    waiting for reconnection for aUru-hrg2

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    XcyfEi9ZJ joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (XcyfEi9ZJ) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    waiting for reconnection for XcyfEi9ZJ

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    I4iIoeeMd joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (I4iIoeeMd) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:756:24)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    K1OJ6mAJ4 joined the room! { name: 'LeavingPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player LeavingPlayer (K1OJ6mAJ4) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    waiting for reconnection for I4iIoeeMd

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    dxgudJrVx joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:896:13)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    Player TestPlayer (dxgudJrVx) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:932:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Player inventory before adding starter items: {
      inventoryLength: 0,
      inventoryConstructor: 'ArraySchema',
      inventoryType: 'object',
      inventoryMetadata: false
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:937:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterSwordDef: {
      def: {
        id: 'starter_sword_id',
        itemId: 'starter_sword',
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:946:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterSword: {
      starterSword: InventoryItem {
        itemId: 'starter_sword',
        quantity: 1,
        name: 'Starter Sword',
        description: 'A basic sword for new adventurers.',
        attack: 5,
        defense: 0,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_sword',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:954:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterSword to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:962:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterSword, inventory length now: 1

      at GameRoom.onJoin (src/server/game/GameRoom.ts:964:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: starterShieldDef: {
      def: {
        id: 'starter_shield_id',
        itemId: 'starter_shield',
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false,
        baseValue: 10,
        isTradeable: true
      },
      defType: 'object',
      defConstructor: 'Object'
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:976:19)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Created starterShield: {
      starterShield: InventoryItem {
        itemId: 'starter_shield',
        quantity: 1,
        name: 'Starter Shield',
        description: 'A basic shield for new adventurers.',
        attack: 0,
        defense: 5,
        isStackable: false
      },
      constructor: 'InventoryItem',
      metadata: false,
      itemId: 'starter_shield',
      quantity: 1
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:984:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: About to push starterShield to inventory...

      at GameRoom.onJoin (src/server/game/GameRoom.ts:992:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Pushed starterShield, inventory length now: 2

      at GameRoom.onJoin (src/server/game/GameRoom.ts:994:21)

  console.log
    Â­Æ’Ã¶Ã¬ DEBUG: Final inventory state: {
      inventoryLength: 2,
      inventoryItems: [
        {
          index: 0,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_sword'
        },
        {
          index: 1,
          constructor: 'InventoryItem',
          metadata: false,
          itemId: 'starter_shield'
        }
      ]
    }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:995:21)

  console.log
    Â­Æ’Ã¶Ã¬ Validating state integrity...

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1195:13)

  console.log
    Ã”Â£Ã  State integrity validation complete

      at GameRoom.validateStateIntegrity (src/server/game/GameRoom.ts:1284:13)

  console.log
    waiting for reconnection for dxgudJrVx

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1113:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1129 |[39m           } [36mcatch[39m (error) {
     [90m 1130 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1131 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1132 |[39m           }
     [90m 1133 |[39m         }
     [90m 1134 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1131:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1143:13)

FAIL src/server/__tests__/game/GameRoom.test.ts
  GameRoom
    Ã”ÃªÃœ should create a game room (30 ms)
    Player Management
      â”œÃ¹ should allow a player to join (63 ms)
      â”œÃ¹ should update player position on move (31 ms)
    Player Disconnection
      Ã”ÃªÃœ should remove player on leave (22 ms)
      Ã”ÃªÃœ should handle player reconnection (27 ms)
    Trade Management
      â”œÃ¹ should handle a trade request successfully (54 ms)
      â”œÃ¹ should not allow a player to trade if target not found (52 ms)
      â”œÃ¹ should not allow a player to trade if already in a trade (53 ms)
      â”œÃ¹ should handle a trade offer successfully (42 ms)
      â”œÃ¹ should not allow trade offer with insufficient items (49 ms)
      â”œÃ¹ should clear previous offer when new offer is made (42 ms)
      â”œÃ¹ should handle trade acceptance successfully (42 ms)
      â”œÃ¹ should handle trade cancellation successfully (42 ms)
      â”œÃ¹ should not allow trade actions for non-existent tradeId (45 ms)
      â”œÃ¹ should not allow trade actions if not part of the trade (41 ms)
    Item Management
      Ã”ÃªÃœ should add starter items to a new player (26 ms)
      â”œÃ¹ should drop player inventory as loot drops on leave (43 ms)
      Ã”ÃªÃœ should create a loot drop with correct properties (23 ms)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Player Management Ã”Ã‡â•‘ should allow a player to join

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "welcome", {"message": "Welcome to RuneScape Discord Game!", "playerId": "xmxRMl0NS"}

    Number of calls: 0

      222 |       expect(player).toBeDefined();
      223 |       expect(player?.username).toBe('TestPlayer');
    > 224 |       expect(client.send).toHaveBeenCalledWith('welcome', {
          |                           ^
      225 |         message: 'Welcome to RuneScape Discord Game!',
      226 |         playerId: client.sessionId,
      227 |       });

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:224:27)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Player Management Ã”Ã‡â•‘ should update player position on move

    expect(received).toBe(expected) // Object.is equality

    Expected: 100
    Received: 0

      245 |
      246 |       const updatedPlayer = room.state.players.get(client.sessionId);
    > 247 |       expect(updatedPlayer?.x).toBe(100);
          |                                ^
      248 |       expect(updatedPlayer?.y).toBe(200);
      249 |     });
      250 |   });

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:247:32)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle a trade request successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow a player to trade if target not found

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow a player to trade if already in a trade

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle a trade offer successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow trade offer with insufficient items

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should clear previous offer when new offer is made

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle trade acceptance successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle trade cancellation successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow trade actions for non-existent tradeId

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow trade actions if not part of the trade

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Item Management Ã”Ã‡â•‘ should drop player inventory as loot drops on leave

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  console.log
    Player test-player collected loot loot-1

      at LootManager.collectLoot (src/server/game/LootManager.ts:110:13)

  console.log
    Dropped player inventory as loot at (0, 0)

      at LootManager.dropLootFromPlayer (src/server/game/LootManager.ts:86:15)

  console.log
    Player test-player collected loot loot-2

      at LootManager.collectLoot (src/server/game/LootManager.ts:110:13)

PASS src/server/__tests__/loot-inventory-sync.test.ts
  Loot/Inventory Sync Integration
    Ã”ÃªÃœ should sync collected loot to the economy API (4 ms)
    Ã”ÃªÃœ should sync dropped inventory to the economy API on disconnect (1 ms)
    Ã”ÃªÃœ should log errors but not throw when economy API fails (5 ms)

PASS src/server/__tests__/game/CombatSystemAction.test.ts
  CombatSystem.handlePlayerAction
    Ã”ÃªÃœ should return null for non-attack actions (2 ms)
    Ã”ÃªÃœ should return null if target not found (1 ms)
    Ã”ÃªÃœ should call performAttack and return result for valid attack (1 ms)

2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API unhealthy: undefined[39m
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[32minfo[39m]: [32mEconomy API connected[39m
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[32minfo[39m]: [32mEconomy API connected[39m
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API connection failed: API unavailable[39m
Error: API unavailable
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:51:15)
    at C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:397:39
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:404:13)
    at Object.mockConstructor [as healthCheck] (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:148:19)
    at EconomyIntegration.checkConnection (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:61:42)
    at EconomyIntegration.isReady (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:79:16)
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:54:47)
    at Promise.then.completed (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:316:40)
    at _runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:252:3)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:444:34)
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API connection failed: API unavailable[39m
Error: API unavailable
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:51:15)
    at C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:397:39
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:404:13)
    at Object.mockConstructor [as healthCheck] (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:148:19)
    at EconomyIntegration.checkConnection (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:61:42)
    at new EconomyIntegration (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:53:10)
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:28:26)
    at Promise.then.completed (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusHook (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:281:40)
    at _runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:246:5)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:444:34)
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API connection failed: API unavailable[39m
Error: API unavailable
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:51:15)
    at C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:397:39
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:404:13)
    at Object.mockConstructor [as healthCheck] (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:148:19)
    at EconomyIntegration.checkConnection (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:61:42)
    at new EconomyIntegration (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:53:10)
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:28:26)
    at Promise.then.completed (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusHook (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:281:40)
    at _runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:246:5)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:444:34)
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API connection failed: API unavailable[39m
Error: API unavailable
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:51:15)
    at C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:397:39
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:404:13)
    at Object.mockConstructor [as healthCheck] (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:148:19)
    at EconomyIntegration.checkConnection (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:61:42)
    at new EconomyIntegration (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:53:10)
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:28:26)
    at Promise.then.completed (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusHook (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:281:40)
    at _runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:246:5)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:444:34)
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API connection failed: API unavailable[39m
Error: API unavailable
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:51:15)
    at C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:397:39
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:404:13)
    at Object.mockConstructor [as healthCheck] (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:148:19)
    at EconomyIntegration.checkConnection (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:61:42)
    at new EconomyIntegration (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:53:10)
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:28:26)
    at Promise.then.completed (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusHook (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:281:40)
    at _runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:246:5)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:444:34)
{
  "service": "runerogue"
}
2025-06-06 16:58:01 [[31merror[39m]: [31mEconomy API connection failed: API unavailable[39m
Error: API unavailable
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:51:15)
    at C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:397:39
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:404:13)
    at Object.mockConstructor [as healthCheck] (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-mock\build\index.js:148:19)
    at EconomyIntegration.checkConnection (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:61:42)
    at new EconomyIntegration (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\economy-integration.ts:53:10)
    at Object.<anonymous> (C:\Users\aggis\GitHub\runerogue\server-ts\src\server\__tests__\economy-integration.test.ts:28:26)
    at Promise.then.completed (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusHook (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:281:40)
    at _runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:246:5)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at _runTestsForDescribeBlock (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:121:9)
    at run (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (C:\Users\aggis\GitHub\runerogue\server-ts\node_modules\jest-runner\build\runTest.js:444:34)
{
  "service": "runerogue"
}
PASS src/server/__tests__/economy-integration.test.ts
  Economy Integration
    isReady
      Ã”ÃªÃœ should return true when economy API is healthy (4 ms)
      Ã”ÃªÃœ should return false when economy API is not healthy (7 ms)
    getPlayerProfile
      Ã”ÃªÃœ should get player profile and cache it (2 ms)
    getPlayerInventory
      Ã”ÃªÃœ should get player inventory and cache it (1 ms)
    addItemToPlayerInventory
      Ã”ÃªÃœ should add item to player inventory and invalidate cache
    getMarketPrice
      Ã”ÃªÃœ should get current market price for an item
      Ã”ÃªÃœ should return default price if no history exists (1 ms)

  console.error
    EconomyClient.healthCheck invoked

    [0m [90m 169 |[39m   [36masync[39m healthCheck()[33m:[39m [33mPromise[39m[33m<[39m{ status[33m:[39m string[33m;[39m timestamp[33m:[39m number }[33m>[39m {
     [90m 170 |[39m     [90m// Log invocation for testing[39m
    [31m[1m>[22m[39m[90m 171 |[39m     console[33m.[39merror([32m'EconomyClient.healthCheck invoked'[39m)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 172 |[39m     [36mtry[39m {
     [90m 173 |[39m       [36mconst[39m response [33m=[39m [36mawait[39m [36mthis[39m[33m.[39mclient[33m.[39m[36mget[39m([32m'/health'[39m)[33m;[39m
     [90m 174 |[39m       [36mreturn[39m response[33m.[39mdata[33m;[39m[0m

      at EconomyClient.healthCheck (src/services/economy-client.ts:171:13)
      at Object.<anonymous> (src/services/economy-client.test.ts:73:42)

PASS src/services/economy-client.test.ts
  EconomyClient
    Health Check
      Ã”ÃªÃœ should return health status (3 ms)
      Ã”ÃªÃœ should throw an error when API is unavailable (5 ms)
    Player Methods
      Ã”ÃªÃœ should get a list of players
      Ã”ÃªÃœ should get a player by ID
      Ã”ÃªÃœ should create a new player (1 ms)
    Item Methods
      Ã”ÃªÃœ should get a list of items
      Ã”ÃªÃœ should get an item by ID (1 ms)
    Inventory Methods
      Ã”ÃªÃœ should get a player's inventory
      Ã”ÃªÃœ should add an item to a player's inventory
    Trade Methods
      Ã”ÃªÃœ should get trades with filters
    Grand Exchange Methods
      Ã”ÃªÃœ should get Grand Exchange offers

PASS src/server/__tests__/game/ProceduralGenerator.test.ts
  ProceduralGenerator
    Ã”ÃªÃœ should generate a map blueprint with correct dimensions and biome (4 ms)
    Ã”ÃªÃœ should only use valid terrain types for the biome (8 ms)
    Ã”ÃªÃœ should generate monsters only on preferred terrain (2 ms)
    Ã”ÃªÃœ should generate loot and resources only on preferred terrain (1 ms)
    Ã”ÃªÃœ should return all available biomes (1 ms)
    Ã”ÃªÃœ should throw for unknown biome (11 ms)

PASS src/server/__tests__/game/CombatSystem.test.ts
  OSRS Combat Formula Implementation
    Effective Level Calculations (OSRS Wiki Validation)
      Ã”ÃªÃœ should calculate effective attack level correctly with Accurate style (1 ms)
      Ã”ÃªÃœ should calculate effective strength level correctly with Aggressive style
      Ã”ÃªÃœ should calculate effective defense level correctly with Defensive style (1 ms)
      Ã”ÃªÃœ should apply Controlled style bonus correctly (+1 to all)
    Max Hit Calculation (OSRS Wiki Validation)
      Ã”ÃªÃœ should calculate max hit using OSRS formula (1 ms)
      Ã”ÃªÃœ should calculate max hit with different strength levels
      Ã”ÃªÃœ should handle weapons with no strength bonus
    Accuracy Calculation (OSRS Wiki Validation)
      Ã”ÃªÃœ should calculate hit chance using OSRS accuracy formula (1 ms)
      Ã”ÃªÃœ should handle cases where defense roll > attack roll
    Dragon Dagger Special Attack Validation
      Ã”ÃªÃœ should execute dragon dagger special attack correctly (1 ms)
    Equipment Bonus Application
      Ã”ÃªÃœ should apply weapon attack bonuses correctly (1 ms)
      Ã”ÃªÃœ should apply armor defense bonuses correctly
      Ã”ÃªÃœ should return 0 for non-existent equipment (1 ms)
    Complete Combat Scenario Validation
      Ã”ÃªÃœ should perform realistic OSRS combat sequence
      Ã”ÃªÃœ should have a higher hit chance with higher attack level (1 ms)
      Ã”ÃªÃœ should have a lower hit chance with higher defense level
      Ã”ÃªÃœ should consider attack type bonuses (1 ms)
    calculateMaxHit
      Ã”ÃªÃœ should return a max hit value
      Ã”ÃªÃœ should have higher max hit with higher strength level (1 ms)
      Ã”ÃªÃœ should consider weapon strength bonus
      Ã”ÃªÃœ should apply aggressive combat style bonus (1 ms)
    performAttack
      Ã”ÃªÃœ should return an AttackResult object (1 ms)
      Ã”ÃªÃœ should reduce defender health on hit
      Ã”ÃªÃœ should not reduce defender health on miss (1 ms)
      Ã”ÃªÃœ should handle special attacks
    Prayer System Integration
      Ã”ÃªÃœ should apply attack prayer bonuses to max hit calculation (1 ms)
      Ã”ÃªÃœ should apply defence prayer bonuses to accuracy calculation
      Ã”ÃªÃœ should apply Piety prayer correctly (multiple stat bonuses) (1 ms)
      Ã”ÃªÃœ should handle protection prayers correctly (1 ms)
      Ã”ÃªÃœ should calculate prayer bonuses correctly in combat stats
      Ã”ÃªÃœ should handle conflicting prayers properly (1 ms)

PASS src/server/__tests__/game/PrayerSystem.test.ts
  PrayerSystem
    Prayer Activation
      Ã”ÃªÃœ should activate valid prayer (2 ms)
      Ã”ÃªÃœ should not activate prayer with insufficient level (1 ms)
      Ã”ÃªÃœ should not activate prayer with no prayer points
      Ã”ÃªÃœ should not activate already active prayer (1 ms)
    Prayer Conflicts
      Ã”ÃªÃœ should deactivate conflicting prayers when activating new one
      Ã”ÃªÃœ should deactivate multiple conflicting prayers
    Prayer Deactivation
      Ã”ÃªÃœ should deactivate specific prayer (1 ms)
      Ã”ÃªÃœ should deactivate all prayers
    Prayer Bonuses
      Ã”ÃªÃœ should calculate attack bonus correctly (1 ms)
      Ã”ÃªÃœ should calculate strength bonus correctly
      Ã”ÃªÃœ should calculate defence bonus correctly (1 ms)
      Ã”ÃªÃœ should stack multiple prayer bonuses
    Protection Prayers
      Ã”ÃªÃœ should identify protection effects (1 ms)
      Ã”ÃªÃœ should handle multiple protection prayers
    Prayer Point Management
      Ã”ÃªÃœ should drain prayer points when prayers are active
      Ã”ÃªÃœ should deactivate all prayers when prayer points reach zero (1 ms)
      Ã”ÃªÃœ should respect prayer bonus for drain rate
    Prayer System Information
      Ã”ÃªÃœ should return all prayers (1 ms)
      Ã”ÃªÃœ should return available prayers based on level
      Ã”ÃªÃœ should return specific prayer by ID (1 ms)
      Ã”ÃªÃœ should return undefined for non-existent prayer
    Max Prayer Points Update
      Ã”ÃªÃœ should update max prayer points when prayer level changes (1 ms)
      Ã”ÃªÃœ should cap current prayer points when max decreases
    Prayer Point Restoration and Draining
      Ã”ÃªÃœ should restore prayer points correctly
      Ã”ÃªÃœ should cap restoration at max prayer points (1 ms)
      Ã”ÃªÃœ should drain prayer points correctly
      Ã”ÃªÃœ should not drain below zero (1 ms)

PASS src/server/__tests__/debug/minimal-schema.test.ts
  Minimal Schema Test
    Ã”ÃªÃœ should create a Player with basic properties (1 ms)
    Ã”ÃªÃœ should create an InventoryItem with basic properties
    Ã”ÃªÃœ should create a GameState and add a player (1 ms)
    Ã”ÃªÃœ should add an inventory item to a player

  console.log
    Trade prototype methods: [ 'constructor' ]

      at Object.<anonymous> (src/server/__tests__/schema-serialization-repro.test.ts:25:13)

PASS src/server/__tests__/schema-serialization-repro.test.ts
  Colyseus Schema Serialization Minimal Repro
    Ã”ÃªÃœ should serialize a Trade with ArraySchema<InventoryItem> fields without error (3 ms)

PASS src/__tests__/setup.test.ts
  Jest Setup
    Ã”ÃªÃœ should run a simple test (1 ms)
    Ã”ÃªÃœ should handle async tests (1 ms)

  console.log
    Broadcasted state update for player player123.

      at broadcastPlayerState (src/server/game/multiplayerSync.ts:9:11)

  console.log
    Broadcasted sync for all players.

      at syncAllPlayerStates (src/server/game/multiplayerSync.ts:15:11)

PASS src/test/multiplayerSync.test.ts
  multiplayerSync module
    Ã”ÃªÃœ should broadcast updated player state correctly (2 ms)
    Ã”ÃªÃœ should broadcast sync for all player states correctly

PASS src/__tests__/example.test.ts
  Example Test
    Ã”ÃªÃœ should pass a simple test
    Ã”ÃªÃœ should handle async code

  console.log
    Exports from @colyseus/schema: [
      'OPERATION',
      '$changes',
      '$childType',
      '$decoder',
      '$deleteByIndex',
      '$encoder',
      '$filter',
      '$getByIndex',
      '$track',
      'ArraySchema',
      'ChangeTree',
      'CollectionSchema',
      'Decoder',
      'Encoder',
      'MapSchema',
      'Metadata',
      'Reflection',
      'ReflectionField',
      'ReflectionType',
      'Schema',
      'SetSchema',
      'StateView',
      'TypeContext',
      'decode',
      'decodeKeyValueOperation',
      'decodeSchemaOperation',
      'defineCustomTypes',
      'defineTypes',
      'deprecated',
      'dumpChanges',
      'encode',
      'encodeArray',
      'encodeKeyValueOperation',
      'encodeSchemaOperation',
      'entity',
      'getDecoderStateCallbacks',
      'getRawChangesCallback',
      'registerType',
      'schema',
      'type',
      'view'
    ]

      at Object.<anonymous> (src/server/__tests__/colyseus-serializer-version-check.js:3:9)

FAIL src/server/__tests__/colyseus-serializer-version-check.js
  Ã”Ã¹Ã… Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL src/server/__tests__/colyseus-schema-methods-check.js
  Ã”Ã¹Ã… Test suite failed to run

    Cannot find module '../game/EntitySchemas.js' from 'src/server/__tests__/colyseus-schema-methods-check.js'

    > 1 | const { Trade } = require('../game/EntitySchemas.js');
        |                                                                                                         ^
      2 | const trade = new Trade('test_trade', 'proposer', 'accepter');
      3 | console.log('Trade prototype methods:', Object.getOwnPropertyNames(Object.getPrototypeOf(trade)));
      4 |

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/server/__tests__/colyseus-schema-methods-check.js:1:121)

Test Suites: 3 failed, 12 passed, 15 total
Tests:       13 failed, 104 passed, 117 total
Snapshots:   0 total
Time:        3.521 s, estimated 4 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
npm verbose cwd C:\Users\aggis\GitHub\runerogue\server-ts
npm verbose os Windows_NT 10.0.26100
npm verbose node v24.1.0
npm verbose npm  v11.2.0
npm verbose exit 1
npm verbose code 1
