  console.info
    Ã”Â£Ã  .env.test loaded.

      at loadEnvFile (node_modules/@colyseus/tools/build/loadenv.js:46:15)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    tiNa0RTVp joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (tiNa0RTVp) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    waiting for reconnection for tiNa0RTVp

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    C1ulRmM8- joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (C1ulRmM8-) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    waiting for reconnection for C1ulRmM8-

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    zVapsJN7e joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (zVapsJN7e) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    aLD4eXzCd joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (aLD4eXzCd) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    waiting for reconnection for aLD4eXzCd

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    reconnected! reconnected_session_id

      at GameRoom.onLeave (src/server/game/GameRoom.ts:993:21)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.log
    gxkSBM449 joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (gxkSBM449) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    aiVCP680X joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (aiVCP680X) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'gxkSBM449',
          username: 'Player1',
          x: 3,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206331999,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'gxkSBM449',
          username: 'Player1',
          x: 3,
          y: 9,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206331999,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'aiVCP680X',
          username: 'Player2',
          x: 5,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332014,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'aiVCP680X',
          username: 'Player2',
          x: 5,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332014,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for aiVCP680X

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for gxkSBM449

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    QY7WVcBSD joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (QY7WVcBSD) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    LNsQgW0tW joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (LNsQgW0tW) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'QY7WVcBSD',
          username: 'Player1',
          x: 4,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332100,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'QY7WVcBSD',
          username: 'Player1',
          x: 4,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332100,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'LNsQgW0tW',
          username: 'Player2',
          x: 5,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332111,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'LNsQgW0tW',
          username: 'Player2',
          x: 5,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332111,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for LNsQgW0tW

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for QY7WVcBSD

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    oNQXd-t-c joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (oNQXd-t-c) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    OUDTqR7VT joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (OUDTqR7VT) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'oNQXd-t-c',
          username: 'Player1',
          x: 7,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332156,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'oNQXd-t-c',
          username: 'Player1',
          x: 7,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332156,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'OUDTqR7VT',
          username: 'Player2',
          x: 8,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332169,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'OUDTqR7VT',
          username: 'Player2',
          x: 8,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332169,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for OUDTqR7VT

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for oNQXd-t-c

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    15-Tz4jux joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (15-Tz4jux) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    dqpnFK4vE joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (dqpnFK4vE) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '15-Tz4jux',
          username: 'Player1',
          x: 0,
          y: 4,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332201,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '15-Tz4jux',
          username: 'Player1',
          x: 0,
          y: 4,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332201,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'dqpnFK4vE',
          username: 'Player2',
          x: 0,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332212,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'dqpnFK4vE',
          username: 'Player2',
          x: 0,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332212,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for dqpnFK4vE

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for 15-Tz4jux

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    DSeHwEvR6 joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (DSeHwEvR6) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    -lFOZVHzK joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (-lFOZVHzK) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'DSeHwEvR6',
          username: 'Player1',
          x: 9,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332252,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'DSeHwEvR6',
          username: 'Player1',
          x: 9,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332252,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '-lFOZVHzK',
          username: 'Player2',
          x: 0,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332263,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: '-lFOZVHzK',
          username: 'Player2',
          x: 0,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332263,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for -lFOZVHzK

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for DSeHwEvR6

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    QvCuVyXEy joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (QvCuVyXEy) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    LE3N93cUc joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (LE3N93cUc) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'QvCuVyXEy',
          username: 'Player1',
          x: 3,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332297,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'QvCuVyXEy',
          username: 'Player1',
          x: 3,
          y: 2,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332297,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'LE3N93cUc',
          username: 'Player2',
          x: 6,
          y: 8,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332311,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'LE3N93cUc',
          username: 'Player2',
          x: 6,
          y: 8,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332311,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for LE3N93cUc

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for QvCuVyXEy

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    C8cxG8iRj joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (C8cxG8iRj) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    Ysxo3O-on joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (Ysxo3O-on) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'C8cxG8iRj',
          username: 'Player1',
          x: 9,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332347,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'C8cxG8iRj',
          username: 'Player1',
          x: 9,
          y: 7,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332347,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'Ysxo3O-on',
          username: 'Player2',
          x: 3,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332358,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'Ysxo3O-on',
          username: 'Player2',
          x: 3,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332358,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for Ysxo3O-on

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for C8cxG8iRj

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    bUyP703oR joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (bUyP703oR) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    oUB7k8DlS joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (oUB7k8DlS) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'bUyP703oR',
          username: 'Player1',
          x: 3,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332392,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'bUyP703oR',
          username: 'Player1',
          x: 3,
          y: 1,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332392,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'oUB7k8DlS',
          username: 'Player2',
          x: 1,
          y: 8,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332402,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'oUB7k8DlS',
          username: 'Player2',
          x: 1,
          y: 8,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332402,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for oUB7k8DlS

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for bUyP703oR

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    DD0NSA4pg joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (DD0NSA4pg) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    WW8YuAkwj joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (WW8YuAkwj) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'DD0NSA4pg',
          username: 'Player1',
          x: 7,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332432,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'DD0NSA4pg',
          username: 'Player1',
          x: 7,
          y: 6,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332432,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'WW8YuAkwj',
          username: 'Player2',
          x: 8,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332442,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'WW8YuAkwj',
          username: 'Player2',
          x: 8,
          y: 5,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332442,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for WW8YuAkwj

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for DD0NSA4pg

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    TEST SETUP: Initializing Trade Management test

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:341:15)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    l2EXRjPTb joined the room! { name: 'Player1' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player1 (l2EXRjPTb) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    P_VnbfMRD joined the room! { name: 'Player2' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player Player2 (P_VnbfMRD) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    DEFENSIVE WRAP: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'l2EXRjPTb',
          username: 'Player1',
          x: 1,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332475,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player1 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 14 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'l2EXRjPTb',
          username: 'Player1',
          x: 1,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332475,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 14
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'P_VnbfMRD',
          username: 'Player2',
          x: 5,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332486,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:353:17
          at Array.forEach (<anonymous>)

  console.log
    DEFENSIVE WRAP COMPLETE: Player Player2 inventory type: ArraySchema contents: <ref *1> ArraySchema {
      items: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      tmpItems: [
        InventoryItem {
          itemId: 'starter_sword',
          quantity: 1,
          name: 'Starter Sword',
          description: 'A basic sword for new adventurers.',
          attack: 5,
          defense: 0,
          isStackable: false
        },
        InventoryItem {
          itemId: 'starter_shield',
          quantity: 1,
          name: 'Starter Shield',
          description: 'A basic shield for new adventurers.',
          attack: 0,
          defense: 5,
          isStackable: false
        }
      ],
      deletedIndexes: {},
      isMovingItems: false,
      Symbol($changes): ChangeTree {
        isFiltered: false,
        indexedOperations: { '0': 128, '1': 128 },
        changes: { indexes: [Object], operations: [Array], queueRootIndex: 29 },
        allChanges: { indexes: [Object], operations: [Array] },
        isNew: true,
        ref: [Circular *1],
        indexes: {},
        parent: Player {
          id: 'P_VnbfMRD',
          username: 'Player2',
          x: 5,
          y: 3,
          animation: 'idle',
          direction: 'down',
          health: 100,
          maxHealth: 100,
          lastActivity: 1749206332486,
          isBusy: false,
          busyUntil: 0,
          inventory: [Circular *1],
          inventorySize: 28,
          equipment: [Equipment],
          skills: [Skills],
          combatStyle: 'accurate',
          inCombat: false,
          currentTargetId: '',
          specialEnergy: 100,
          prayerPoints: 1,
          activeEffects: [ArraySchema],
          maxPrayerPoints: 1,
          activePrayers: [ArraySchema],
          prayerBonus: 0,
          actionCooldowns: Map(0) {}
        },
        parentIndex: 11,
        root: Root {
          types: [TypeContext],
          nextUniqueId: 43,
          refCount: [Object],
          changeTrees: [Object],
          allChanges: [Array],
          allFilteredChanges: [],
          changes: [Array],
          filteredChanges: []
        },
        refId: 29
      }
    }

      at src/server/__tests__/game/GameRoom.test.ts:388:17
          at Array.forEach (<anonymous>)

  console.log
    waiting for reconnection for P_VnbfMRD

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.log
    waiting for reconnection for l2EXRjPTb

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.warn
    colyseus.js: onMessage() not registered for type 'player_left'.

      at Room.dispatchMessage (node_modules/colyseus.js/src/Room.ts:292:25)
      at Room.Object.<anonymous>.import_colyseus.Room.dispatchMessage (node_modules/@colyseus/testing/build/Room.ext.js:67:28)
      at Room.onMessageCallback (node_modules/colyseus.js/src/Room.ts:271:18)

  console.log
    4_GdwPJ4I joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (4_GdwPJ4I) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    waiting for reconnection for 4_GdwPJ4I

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    f47UoJ1Jf joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (f47UoJ1Jf) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:756:24)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    WGkKzHOuU joined the room! { name: 'LeavingPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player LeavingPlayer (WGkKzHOuU) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    waiting for reconnection for f47UoJ1Jf

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

  console.log
    Map blueprint 'Starting Plains' (ID: default_map_001) loaded and validated successfully.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:50:15)

  console.log
    Map 'Starting Plains' set as current map.

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:56:17)

  console.log
    Collision added at 5,5 on map default_map_001

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:93:15)

  console.log
    Attempting to load an invalid map blueprint (expect errors):

      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:110:13)

  console.error
    Map blueprint validation failed: [
      {
        code: 'too_small',
        minimum: 0,
        type: 'number',
        inclusive: false,
        exact: false,
        message: 'Map width must be a positive integer.',
        path: [ 'width' ]
      },
      {
        code: 'invalid_type',
        expected: 'array',
        received: 'undefined',
        path: [ 'collisionMap' ],
        message: 'Required'
      }
    ]

    [0m [90m 59 |[39m     } [36mcatch[39m (error) {
     [90m 60 |[39m       [36mif[39m (error [36minstanceof[39m [33mZodError[39m) {
    [31m[1m>[22m[39m[90m 61 |[39m         console[33m.[39merror([32m'Map blueprint validation failed:'[39m[33m,[39m error[33m.[39merrors)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 62 |[39m       } [36melse[39m {
     [90m 63 |[39m         console[33m.[39merror([32m'An unexpected error occurred during map blueprint loading:'[39m[33m,[39m error)[33m;[39m
     [90m 64 |[39m       }[0m

      at GameRoom.loadAndValidateMapBlueprint (src/server/game/GameRoom.ts:61:17)
      at GameRoom.initializeDefaultMap (src/server/game/GameRoom.ts:111:10)
      at GameRoom.onCreate (src/server/game/GameRoom.ts:120:10)
      at handleCreateRoom (node_modules/@colyseus/core/build/MatchMaker.js:344:18)
      at Object.createRoom (node_modules/@colyseus/core/build/MatchMaker.js:291:18)
      at ColyseusTestServer.createRoom (node_modules/@colyseus/testing/build/TestServer.js:63:18)
      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:190:12)

  console.log
    Initial NPCs added: [ 'Goblin', 'Orc' ]

      at GameRoom.onCreate (src/server/game/GameRoom.ts:145:13)

  console.log
    GameRoom created: {}

      at GameRoom.onCreate (src/server/game/GameRoom.ts:150:13)

  console.log
    hKnahyP0L joined the room! { name: 'TestPlayer' }

      at GameRoom.onJoin (src/server/game/GameRoom.ts:833:13)

  console.log
    Player TestPlayer (hKnahyP0L) has no existing economy inventory. Adding starter items.

      at GameRoom.onJoin (src/server/game/GameRoom.ts:866:19)

  console.log
    waiting for reconnection for hKnahyP0L

      at GameRoom.onLeave (src/server/game/GameRoom.ts:991:21)

  console.error
    Reconnection failed: not joined

    [0m [90m 1007 |[39m           } [36mcatch[39m (error) {
     [90m 1008 |[39m             [90m// Player couldn't reconnect, handle as a normal leave[39m
    [31m[1m>[22m[39m[90m 1009 |[39m             console[33m.[39merror([32m`Reconnection failed: ${(error as Error).message}`[39m)[33m;[39m
     [90m      |[39m                     [31m[1m^[22m[39m
     [90m 1010 |[39m           }
     [90m 1011 |[39m         }
     [90m 1012 |[39m       } [36mcatch[39m (error) {[0m

      at GameRoom.onLeave (src/server/game/GameRoom.ts:1009:21)
      at GameRoom._onLeave (node_modules/@colyseus/core/build/Room.js:793:9)

  console.log
    GameRoom disposed.

      at GameRoom.onDispose (src/server/game/GameRoom.ts:1021:13)

FAIL src/server/__tests__/game/GameRoom.test.ts (162 MB heap size)
  GameRoom
    Ã”ÃªÃœ should create a game room (26 ms)
    Player Management
      â”œÃ¹ should allow a player to join (66 ms)
      â”œÃ¹ should update player position on move (36 ms)
    Player Disconnection
      Ã”ÃªÃœ should remove player on leave (29 ms)
      Ã”ÃªÃœ should handle player reconnection (25 ms)
    Trade Management
      â”œÃ¹ should handle a trade request successfully (56 ms)
      â”œÃ¹ should not allow a player to trade if target not found (49 ms)
      â”œÃ¹ should not allow a player to trade if already in a trade (58 ms)
      â”œÃ¹ should handle a trade offer successfully (44 ms)
      â”œÃ¹ should not allow trade offer with insufficient items (48 ms)
      â”œÃ¹ should clear previous offer when new offer is made (52 ms)
      â”œÃ¹ should handle trade acceptance successfully (43 ms)
      â”œÃ¹ should handle trade cancellation successfully (44 ms)
      â”œÃ¹ should not allow trade actions for non-existent tradeId (39 ms)
      â”œÃ¹ should not allow trade actions if not part of the trade (44 ms)
    Item Management
      Ã”ÃªÃœ should add starter items to a new player (26 ms)
      â”œÃ¹ should drop player inventory as loot drops on leave (44 ms)
      Ã”ÃªÃœ should create a loot drop with correct properties (25 ms)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Player Management Ã”Ã‡â•‘ should allow a player to join

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "welcome", {"message": "Welcome to RuneScape Discord Game!", "playerId": "tiNa0RTVp"}

    Number of calls: 0

      222 |       expect(player).toBeDefined();
      223 |       expect(player?.username).toBe('TestPlayer');
    > 224 |       expect(client.send).toHaveBeenCalledWith('welcome', {
          |                           ^
      225 |         message: 'Welcome to RuneScape Discord Game!',
      226 |         playerId: client.sessionId,
      227 |       });

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:224:27)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Player Management Ã”Ã‡â•‘ should update player position on move

    expect(received).toBe(expected) // Object.is equality

    Expected: 100
    Received: 0

      245 |
      246 |       const updatedPlayer = room.state.players.get(client.sessionId);
    > 247 |       expect(updatedPlayer?.x).toBe(100);
          |                                ^
      248 |       expect(updatedPlayer?.y).toBe(200);
      249 |     });
      250 |   });

      at Object.<anonymous> (src/server/__tests__/game/GameRoom.test.ts:247:32)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle a trade request successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow a player to trade if target not found

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow a player to trade if already in a trade

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle a trade offer successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow trade offer with insufficient items

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should clear previous offer when new offer is made

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle trade acceptance successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should handle trade cancellation successfully

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow trade actions for non-existent tradeId

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Trade Management Ã”Ã‡â•‘ should not allow trade actions if not part of the trade

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

  Ã”Ã¹Ã… GameRoom Ã”Ã‡â•‘ Item Management Ã”Ã‡â•‘ should drop player inventory as loot drops on leave

    TypeError: Cannot read properties of undefined (reading 'Symbol(Symbol.metadata)')

      at encodeValue (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:37:20)
      at encodeKeyValueOperation (node_modules/@colyseus/schema/src/encoder/EncodeOperation.ts:155:5)
      at Encoder.encode (node_modules/@colyseus/schema/src/encoder/Encoder.ts:113:17)
      at Encoder.encodeAll (node_modules/@colyseus/schema/src/encoder/Encoder.ts:149:21)
      at SchemaSerializer.getFullState (node_modules/@colyseus/core/build/serializer/SchemaSerializer.js:49:43)
      at GameRoom.sendFullState (node_modules/@colyseus/core/build/Room.js:656:33)
      at GameRoom._onMessage (node_modules/@colyseus/core/build/Room.js:769:14)
      at GameRoom.Object.<anonymous>.import_core.Room._onMessage (node_modules/@colyseus/testing/build/Room.ext.js:5:22)
      at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:1220:20)
      at Receiver.dataMessage (node_modules/ws/lib/receiver.js:569:14)
      at Receiver.getData (node_modules/ws/lib/receiver.js:496:10)
      at Receiver.startLoop (node_modules/ws/lib/receiver.js:167:16)
      at Receiver._write (node_modules/ws/lib/receiver.js:94:10)
      at Socket.socketOnData (node_modules/ws/lib/websocket.js:1355:35)

Test Suites: 1 failed, 1 total
Tests:       13 failed, 5 passed, 18 total
Snapshots:   0 total
Time:        2.214 s
Ran all test suites matching /server-ts\\src\\server\\__tests__\\game\\GameRoom.test.ts/i.
