name: MCP Server CI/CD

on:
  push:
    paths:
      - "agents/mcp/**"
  pull_request:
    paths:
      - "agents/mcp/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      # Use a service container for testing if needed
      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: >-
      #     --health-cmd "redis-cli ping"
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        working-directory: agents/mcp
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        working-directory: agents/mcp
        env:
          MCP_SECRET_KEY: ${{ secrets.MCP_SECRET_KEY || 'test-secret-key' }}
        run: |
          pytest -v --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./agents/mcp/coverage.xml
          fail_ci_if_error: false

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' # Only deploy on push to main
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./agents/mcp/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/runerogue-mcp:latest

    # Uncomment and configure if you're using a cloud provider for deployment
    # - name: Deploy to Cloud Run
    #   uses: google-github-actions/deploy-cloudrun@v1
    #   with:
    #     service: runerogue-mcp
    #     image: ${{ secrets.DOCKERHUB_USERNAME }}/runerogue-mcp:latest
    #     credentials: ${{ secrets.GCP_CREDENTIALS }}
    #     region: us-central1
    #     platform: managed
