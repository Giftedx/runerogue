# ... (previous content remains the same until the deploy-production job) ...
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, test-auth-service, test-meta-ui, integration-test, security-scan, docker-build, godot-build]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deployment placeholder
      run: |
        echo "Deploying to production environment..."
        echo "DRY_RUN mode: ${{ env.DRY_RUN }}"
        echo "This is where production deployment would happen"

  notification:
    name: Notification
    runs-on: ubuntu-latest
    needs: [test, test-auth-service, test-meta-ui, integration-test, security-scan, docker-build, godot-build]
    if: always()
    
    steps:
    - name: Update status
      run: |
        echo "Pipeline Status Update:"
        echo "- Lint: ${{ needs.lint.result || 'skipped' }}"
        echo "- Test: ${{ needs.test.result || 'skipped' }}"
        echo "- Test Auth Service: ${{ needs.test-auth-service.result || 'skipped' }}"
        echo "- Test Meta UI: ${{ needs.test-meta-ui.result || 'skipped' }}"
        echo "- Integration Test: ${{ needs.integration-test.result || 'skipped' }}"
        echo "- Security Scan: ${{ needs.security-scan.result || 'skipped' }}"
        echo "- Docker Build: ${{ needs.docker-build.result || 'skipped' }}"
        echo "- Godot Build: ${{ needs.godot-build.result || 'skipped' }}"
        echo "DRY_RUN: ${{ env.DRY_RUN }}"
        
        if [[ "${{ needs.test.result }}" == "success" && "${{ needs.integration-test.result }}" == "success" && "${{ needs.test-auth-service.result }}" == "success" && "${{ needs.test-meta-ui.result }}" == "success" && "${{ needs.godot-build.result }}" == "success" ]]; then
          echo "✅ All critical tests passed"
        else
          echo "❌ Some tests failed"
        fi