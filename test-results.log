{"numFailedTestSuites":25,"numFailedTests":7,"numPassedTestSuites":10,"numPassedTests":128,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":20,"numTodoTests":0,"numTotalTestSuites":35,"numTotalTests":135,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":true,"filesAdded":0,"filesRemoved":9,"filesRemovedList":["C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\core\\src\\transformers\\__snapshots__\\toString.test.ts.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\react\\src\\utils\\__snapshots__\\getParams.test.tsx.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\react\\src\\utils\\__snapshots__\\params.test.tsx.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\core\\src\\transformers\\__snapshots__\\toString.test.ts.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\react\\src\\utils\\__snapshots__\\getParams.test.tsx.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\react\\src\\utils\\__snapshots__\\params.test.tsx.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\core\\src\\transformers\\__snapshots__\\toString.test.ts.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\react\\src\\utils\\__snapshots__\\getParams.test.tsx.snap","C:\\Users\\aggis\\GitHub\\runerogue\\external-repos\\mcp-repos\\kubb\\packages\\react\\src\\utils\\__snapshots__\\params.test.tsx.snap"],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1750253570989,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Example Test"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"Example Test should pass a simple test","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should pass a simple test"},{"ancestorTitles":["Example Test"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Example Test should handle async code","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle async code"}],"endTime":1750253581144,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\__tests__\\example.test.ts","startTime":1750253572126,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Core Schemas Test"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Core Schemas Test should create a Player instance successfully","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a Player instance successfully"},{"ancestorTitles":["Core Schemas Test"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Schemas Test should create an Enemy instance successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create an Enemy instance successfully"},{"ancestorTitles":["Core Schemas Test"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Core Schemas Test should create an InventoryItem instance successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create an InventoryItem instance successfully"},{"ancestorTitles":["Core Schemas Test"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Schemas Test should create a GameRoomState instance successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create a GameRoomState instance successfully"},{"ancestorTitles":["Core Schemas Test"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Schemas Test should add a player to game state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add a player to game state"},{"ancestorTitles":["Core Schemas Test"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Schemas Test should add an item to player inventory","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should add an item to player inventory"}],"endTime":1750253581340,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\core-schemas.test.ts","startTime":1750253572128,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["OSRS Combat Formula Implementation","Effective Level Calculations (OSRS Wiki Validation)"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Effective Level Calculations (OSRS Wiki Validation) should calculate effective attack level correctly with Accurate style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate effective attack level correctly with Accurate style"},{"ancestorTitles":["OSRS Combat Formula Implementation","Effective Level Calculations (OSRS Wiki Validation)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Effective Level Calculations (OSRS Wiki Validation) should calculate effective strength level correctly with Aggressive style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate effective strength level correctly with Aggressive style"},{"ancestorTitles":["OSRS Combat Formula Implementation","Effective Level Calculations (OSRS Wiki Validation)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Effective Level Calculations (OSRS Wiki Validation) should calculate effective defense level correctly with Defensive style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate effective defense level correctly with Defensive style"},{"ancestorTitles":["OSRS Combat Formula Implementation","Effective Level Calculations (OSRS Wiki Validation)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Effective Level Calculations (OSRS Wiki Validation) should apply Controlled style bonus correctly (+1 to all)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should apply Controlled style bonus correctly (+1 to all)"},{"ancestorTitles":["OSRS Combat Formula Implementation","Max Hit Calculation (OSRS Wiki Validation)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Max Hit Calculation (OSRS Wiki Validation) should calculate max hit using OSRS formula","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate max hit using OSRS formula"},{"ancestorTitles":["OSRS Combat Formula Implementation","Max Hit Calculation (OSRS Wiki Validation)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Max Hit Calculation (OSRS Wiki Validation) should calculate max hit with different strength levels","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate max hit with different strength levels"},{"ancestorTitles":["OSRS Combat Formula Implementation","Max Hit Calculation (OSRS Wiki Validation)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Max Hit Calculation (OSRS Wiki Validation) should handle weapons with no strength bonus","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle weapons with no strength bonus"},{"ancestorTitles":["OSRS Combat Formula Implementation","Accuracy Calculation (OSRS Wiki Validation)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Accuracy Calculation (OSRS Wiki Validation) should calculate hit chance using OSRS accuracy formula","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate hit chance using OSRS accuracy formula"},{"ancestorTitles":["OSRS Combat Formula Implementation","Accuracy Calculation (OSRS Wiki Validation)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Accuracy Calculation (OSRS Wiki Validation) should handle cases where defense roll > attack roll","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle cases where defense roll > attack roll"},{"ancestorTitles":["OSRS Combat Formula Implementation","Dragon Dagger Special Attack Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Dragon Dagger Special Attack Validation should execute dragon dagger special attack correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should execute dragon dagger special attack correctly"},{"ancestorTitles":["OSRS Combat Formula Implementation","Equipment Bonus Application"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Equipment Bonus Application should apply weapon attack bonuses correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply weapon attack bonuses correctly"},{"ancestorTitles":["OSRS Combat Formula Implementation","Equipment Bonus Application"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Equipment Bonus Application should apply armor defense bonuses correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply armor defense bonuses correctly"},{"ancestorTitles":["OSRS Combat Formula Implementation","Equipment Bonus Application"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Equipment Bonus Application should return 0 for non-existent equipment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 0 for non-existent equipment"},{"ancestorTitles":["OSRS Combat Formula Implementation","Complete Combat Scenario Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Complete Combat Scenario Validation should perform realistic OSRS combat sequence","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should perform realistic OSRS combat sequence"},{"ancestorTitles":["OSRS Combat Formula Implementation","Complete Combat Scenario Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Complete Combat Scenario Validation should have a higher hit chance with higher attack level","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have a higher hit chance with higher attack level"},{"ancestorTitles":["OSRS Combat Formula Implementation","Complete Combat Scenario Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Complete Combat Scenario Validation should have a lower hit chance with higher defense level","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have a lower hit chance with higher defense level"},{"ancestorTitles":["OSRS Combat Formula Implementation","Complete Combat Scenario Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Complete Combat Scenario Validation should consider attack type bonuses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should consider attack type bonuses"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should return a max hit value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return a max hit value"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should have higher max hit with higher strength level","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have higher max hit with higher strength level"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should consider weapon strength bonus","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should consider weapon strength bonus"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should apply aggressive combat style bonus","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply aggressive combat style bonus"},{"ancestorTitles":["OSRS Combat Formula Implementation","performAttack"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation performAttack should return an AttackResult object","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return an AttackResult object"},{"ancestorTitles":["OSRS Combat Formula Implementation","performAttack"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation performAttack should reduce defender health on hit","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reduce defender health on hit"},{"ancestorTitles":["OSRS Combat Formula Implementation","performAttack"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation performAttack should not reduce defender health on miss","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not reduce defender health on miss"},{"ancestorTitles":["OSRS Combat Formula Implementation","performAttack"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation performAttack should handle special attacks","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle special attacks"},{"ancestorTitles":["OSRS Combat Formula Implementation","Prayer System Integration"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Prayer System Integration should apply attack prayer bonuses to max hit calculation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply attack prayer bonuses to max hit calculation"},{"ancestorTitles":["OSRS Combat Formula Implementation","Prayer System Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Prayer System Integration should apply defence prayer bonuses to accuracy calculation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply defence prayer bonuses to accuracy calculation"},{"ancestorTitles":["OSRS Combat Formula Implementation","Prayer System Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Prayer System Integration should apply Piety prayer correctly (multiple stat bonuses)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should apply Piety prayer correctly (multiple stat bonuses)"},{"ancestorTitles":["OSRS Combat Formula Implementation","Prayer System Integration"],"duration":3,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m2.32\u001b[39m\nReceived:   \u001b[31m2.4\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m2.32\u001b[39m\nReceived:   \u001b[31m2.4\u001b[39m\n    at Object.<anonymous> (C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\CombatSystem.test.ts:475:34)\n    at Promise.then.completed (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"OSRS Combat Formula Implementation Prayer System Integration should handle protection prayers correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle protection prayers correctly"},{"ancestorTitles":["OSRS Combat Formula Implementation","Prayer System Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Prayer System Integration should calculate prayer bonuses correctly in combat stats","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should calculate prayer bonuses correctly in combat stats"},{"ancestorTitles":["OSRS Combat Formula Implementation","Prayer System Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Prayer System Integration should handle conflicting prayers properly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle conflicting prayers properly"}],"endTime":1750253581357,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOSRS Combat Formula Implementation › Prayer System Integration › should handle protection prayers correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: < \u001b[32m2.32\u001b[39m\n    Received:   \u001b[31m2.4\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 473 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 474 |\u001b[39m       \u001b[90m// Protection should reduce damage by around 40% in OSRS\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 475 |\u001b[39m       expect(avgProtectedDamage)\u001b[33m.\u001b[39mtoBeLessThan(avgUnprotectedDamage \u001b[33m*\u001b[39m \u001b[35m0.8\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 476 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 477 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 478 |\u001b[39m     it(\u001b[32m'should calculate prayer bonuses correctly in combat stats'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mpackages/server/src/server/__tests__/game/CombatSystem.test.ts\u001b[39m\u001b[0m\u001b[2m:475:34)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\CombatSystem.test.ts","startTime":1750253572128,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ProceduralGenerator"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"ProceduralGenerator should generate a map blueprint with correct dimensions and biome","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should generate a map blueprint with correct dimensions and biome"},{"ancestorTitles":["ProceduralGenerator"],"duration":80,"failureDetails":[],"failureMessages":[],"fullName":"ProceduralGenerator should only use valid terrain types for the biome","invocations":1,"location":null,"numPassingAsserts":256,"retryReasons":[],"status":"passed","title":"should only use valid terrain types for the biome"},{"ancestorTitles":["ProceduralGenerator"],"duration":17,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\ProceduralGenerator.test.ts:41:58)\n    at Promise.then.completed (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"ProceduralGenerator should generate monsters only on preferred terrain","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should generate monsters only on preferred terrain"},{"ancestorTitles":["ProceduralGenerator"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ProceduralGenerator should generate loot and resources only on preferred terrain","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should generate loot and resources only on preferred terrain"},{"ancestorTitles":["ProceduralGenerator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ProceduralGenerator should return all available biomes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return all available biomes"},{"ancestorTitles":["ProceduralGenerator"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"ProceduralGenerator should throw for unknown biome","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw for unknown biome"}],"endTime":1750253581374,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProceduralGenerator › should generate monsters only on preferred terrain\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 |\u001b[39m       \u001b[36mconst\u001b[39m config \u001b[33m=\u001b[39m biomeConfig\u001b[33m.\u001b[39mmonsters\u001b[33m.\u001b[39mfind(m \u001b[33m=>\u001b[39m m\u001b[33m.\u001b[39mnpcId \u001b[33m===\u001b[39m monster\u001b[33m.\u001b[39mnpcId)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m       expect(config)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 41 |\u001b[39m       expect(config\u001b[33m!\u001b[39m\u001b[33m.\u001b[39mpreferredTerrain\u001b[33m.\u001b[39mincludes(terrain))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m     }\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mpackages/server/src/server/__tests__/game/ProceduralGenerator.test.ts\u001b[39m\u001b[0m\u001b[2m:41:58)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\ProceduralGenerator.test.ts","startTime":1750253572083,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["OSRS Data Validation","Experience calculations"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Experience calculations calculateXpFromLevel matches OSRS values","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"calculateXpFromLevel matches OSRS values"},{"ancestorTitles":["OSRS Data Validation","Experience calculations"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Experience calculations calculateLevelFromXp returns correct levels","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"calculateLevelFromXp returns correct levels"},{"ancestorTitles":["OSRS Data Validation","Experience calculations"],"duration":47,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Experience calculations experience calculation handles edge cases","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"experience calculation handles edge cases"},{"ancestorTitles":["OSRS Data Validation","Tree data validation"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Tree data validation all trees have required properties","invocations":1,"location":null,"numPassingAsserts":35,"retryReasons":[],"status":"passed","title":"all trees have required properties"},{"ancestorTitles":["OSRS Data Validation","Tree data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Tree data validation tree XP values match OSRS Wiki","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"tree XP values match OSRS Wiki"},{"ancestorTitles":["OSRS Data Validation","Tree data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Tree data validation tree level requirements are correct","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"tree level requirements are correct"},{"ancestorTitles":["OSRS Data Validation","Mining data validation"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Mining data validation all rocks have required properties","invocations":1,"location":null,"numPassingAsserts":42,"retryReasons":[],"status":"passed","title":"all rocks have required properties"},{"ancestorTitles":["OSRS Data Validation","Mining data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Mining data validation rock XP values match OSRS Wiki","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"rock XP values match OSRS Wiki"},{"ancestorTitles":["OSRS Data Validation","Mining data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Mining data validation all rocks always deplete","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"all rocks always deplete"},{"ancestorTitles":["OSRS Data Validation","Cooking data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Cooking data validation cooking XP values match OSRS Wiki","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"cooking XP values match OSRS Wiki"},{"ancestorTitles":["OSRS Data Validation","Cooking data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Cooking data validation burn stop levels are correct","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"burn stop levels are correct"},{"ancestorTitles":["OSRS Data Validation","Cooking data validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Cooking data validation all foods have required item IDs","invocations":1,"location":null,"numPassingAsserts":60,"retryReasons":[],"status":"passed","title":"all foods have required item IDs"},{"ancestorTitles":["OSRS Data Validation","Firemaking data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Firemaking data validation log XP values match OSRS Wiki","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"log XP values match OSRS Wiki"},{"ancestorTitles":["OSRS Data Validation","Firemaking data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Firemaking data validation log level requirements are correct","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"log level requirements are correct"},{"ancestorTitles":["OSRS Data Validation","Gathering success calculations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Gathering success calculations woodcutting success chance increases with level","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"woodcutting success chance increases with level"},{"ancestorTitles":["OSRS Data Validation","Gathering success calculations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Gathering success calculations better tools increase success chance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"better tools increase success chance"},{"ancestorTitles":["OSRS Data Validation","Gathering success calculations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Gathering success calculations mining success chance increases with level","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"mining success chance increases with level"},{"ancestorTitles":["OSRS Data Validation","Gathering success calculations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Gathering success calculations fishing success chance increases with level","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"fishing success chance increases with level"},{"ancestorTitles":["OSRS Data Validation","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Data validation tree data has required properties","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"tree data has required properties"},{"ancestorTitles":["OSRS Data Validation","Data validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Data validation rock data has required properties","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"rock data has required properties"},{"ancestorTitles":["OSRS Data Validation","Data validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Data Validation Data validation fish data has required properties","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"fish data has required properties"}],"endTime":1750253581501,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\osrs-data\\src\\skills\\__tests__\\gathering-data.test.ts","startTime":1750253572222,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Shared Package"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Shared Package should be able to import shared types","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should be able to import shared types"},{"ancestorTitles":["Shared Package"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Shared Package should pass basic test to verify Jest is working","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should pass basic test to verify Jest is working"}],"endTime":1750253581508,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\shared\\src\\__tests__\\basic.test.ts","startTime":1750253572151,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should calculate max hit using OSRS formula - Dragon Dagger example","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate max hit using OSRS formula - Dragon Dagger example"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should calculate max hit with prayer bonus","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate max hit with prayer bonus"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateMaxHit"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateMaxHit should handle base case with no equipment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle base case with no equipment"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateAccuracy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateAccuracy should calculate accuracy using OSRS formula - basic case","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate accuracy using OSRS formula - basic case"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateAccuracy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateAccuracy should handle case where attack roll equals defence roll","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle case where attack roll equals defence roll"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateAccuracy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateAccuracy should return minimum accuracy of 0","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return minimum accuracy of 0"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateCombatLevel"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateCombatLevel should calculate combat level using OSRS formula - basic case","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate combat level using OSRS formula - basic case"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateCombatLevel"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateCombatLevel should calculate minimum combat level","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate minimum combat level"},{"ancestorTitles":["OSRS Combat Formula Implementation","calculateCombatLevel"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation calculateCombatLevel should calculate high level combat accurately","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate high level combat accurately"},{"ancestorTitles":["OSRS Combat Formula Implementation","getAttackSpeed"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation getAttackSpeed should return correct attack speeds for various weapons","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should return correct attack speeds for various weapons"},{"ancestorTitles":["OSRS Combat Formula Implementation","getAttackSpeed"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation getAttackSpeed should return default speed for unknown weapons","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return default speed for unknown weapons"},{"ancestorTitles":["OSRS Combat Formula Implementation","getAttackSpeed"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation getAttackSpeed should handle unarmed combat","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle unarmed combat"},{"ancestorTitles":["OSRS Combat Formula Implementation","Integration Tests - Real OSRS Examples"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Combat Formula Implementation Integration Tests - Real OSRS Examples should match known Dragon Scimitar DPS calculations","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should match known Dragon Scimitar DPS calculations"}],"endTime":1750253581652,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\osrs-data\\src\\calculators\\__tests__\\combat.test.ts","startTime":1750253572173,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Jest Setup"],"duration":50,"failureDetails":[],"failureMessages":[],"fullName":"Jest Setup should run a simple test","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should run a simple test"},{"ancestorTitles":["Jest Setup"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Jest Setup should handle async tests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle async tests"}],"endTime":1750253581740,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\__tests__\\setup.test.ts","startTime":1750253572158,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Core Game Logic","Player Management"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Player Management should create a player with correct initial values","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a player with correct initial values"},{"ancestorTitles":["Core Game Logic","Player Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Player Management should update player position","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update player position"},{"ancestorTitles":["Core Game Logic","Player Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Player Management should remove player from game state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should remove player from game state"},{"ancestorTitles":["Core Game Logic","Inventory Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Inventory Management should add starter items to player inventory","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should add starter items to player inventory"},{"ancestorTitles":["Core Game Logic","Inventory Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Inventory Management should not duplicate items when adding to inventory","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not duplicate items when adding to inventory"},{"ancestorTitles":["Core Game Logic","Trade Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Trade Management should create a trade between two players","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create a trade between two players"},{"ancestorTitles":["Core Game Logic","Game State Integrity"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Core Game Logic Game State Integrity should maintain state integrity with multiple operations","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should maintain state integrity with multiple operations"}],"endTime":1750253581741,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\core-game-logic.test.ts","startTime":1750253572192,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["OSRS Gathering Skills Integration","Player progression simulation"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration Player progression simulation level 1 player can gather basic resources","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"level 1 player can gather basic resources"},{"ancestorTitles":["OSRS Gathering Skills Integration","Player progression simulation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration Player progression simulation level 30 player has better success rates and access to mid-tier content","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"level 30 player has better success rates and access to mid-tier content"},{"ancestorTitles":["OSRS Gathering Skills Integration","Player progression simulation"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration Player progression simulation level 50 player has access to all content and best tools","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"level 50 player has access to all content and best tools"},{"ancestorTitles":["OSRS Gathering Skills Integration","Tool progression validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration Tool progression validation better tools provide better effectiveness","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"better tools provide better effectiveness"},{"ancestorTitles":["OSRS Gathering Skills Integration","OSRS data accuracy validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration OSRS data accuracy validation XP values match OSRS exactly","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"XP values match OSRS exactly"},{"ancestorTitles":["OSRS Gathering Skills Integration","OSRS data accuracy validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration OSRS data accuracy validation level requirements match OSRS","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"level requirements match OSRS"},{"ancestorTitles":["OSRS Gathering Skills Integration","Complete gathering cycle simulation"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"OSRS Gathering Skills Integration Complete gathering cycle simulation player can progress from level 1 to 50 using correct resources","invocations":1,"location":null,"numPassingAsserts":29,"retryReasons":[],"status":"passed","title":"player can progress from level 1 to 50 using correct resources"}],"endTime":1750253582039,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\osrs-data\\src\\skills\\__tests__\\gathering-integration.test.ts","startTime":1750253572188,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Simple Schema Debug"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"Simple Schema Debug should create a simple player schema","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create a simple player schema"},{"ancestorTitles":["Simple Schema Debug"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Simple Schema Debug should be able to modify properties","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should be able to modify properties"}],"endTime":1750253582070,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\SimpleSchema.test.ts","startTime":1750253572220,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PrayerSystem","Prayer Activation"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Activation should activate valid prayer","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should activate valid prayer"},{"ancestorTitles":["PrayerSystem","Prayer Activation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Activation should not activate prayer with insufficient level","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not activate prayer with insufficient level"},{"ancestorTitles":["PrayerSystem","Prayer Activation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Activation should not activate prayer with no prayer points","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not activate prayer with no prayer points"},{"ancestorTitles":["PrayerSystem","Prayer Activation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Activation should not activate already active prayer","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not activate already active prayer"},{"ancestorTitles":["PrayerSystem","Prayer Conflicts"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Conflicts should deactivate conflicting prayers when activating new one","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should deactivate conflicting prayers when activating new one"},{"ancestorTitles":["PrayerSystem","Prayer Conflicts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Conflicts should deactivate multiple conflicting prayers","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should deactivate multiple conflicting prayers"},{"ancestorTitles":["PrayerSystem","Prayer Deactivation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Deactivation should deactivate specific prayer","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should deactivate specific prayer"},{"ancestorTitles":["PrayerSystem","Prayer Deactivation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Deactivation should deactivate all prayers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deactivate all prayers"},{"ancestorTitles":["PrayerSystem","Prayer Bonuses"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Bonuses should calculate attack bonus correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate attack bonus correctly"},{"ancestorTitles":["PrayerSystem","Prayer Bonuses"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Bonuses should calculate strength bonus correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate strength bonus correctly"},{"ancestorTitles":["PrayerSystem","Prayer Bonuses"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Bonuses should calculate defence bonus correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate defence bonus correctly"},{"ancestorTitles":["PrayerSystem","Prayer Bonuses"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Bonuses should stack multiple prayer bonuses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should stack multiple prayer bonuses"},{"ancestorTitles":["PrayerSystem","Protection Prayers"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Protection Prayers should identify protection effects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should identify protection effects"},{"ancestorTitles":["PrayerSystem","Protection Prayers"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Protection Prayers should handle multiple protection prayers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple protection prayers"},{"ancestorTitles":["PrayerSystem","Prayer Point Management"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Management should drain prayer points when prayers are active","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should drain prayer points when prayers are active"},{"ancestorTitles":["PrayerSystem","Prayer Point Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Management should deactivate all prayers when prayer points reach zero","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deactivate all prayers when prayer points reach zero"},{"ancestorTitles":["PrayerSystem","Prayer Point Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Management should respect prayer bonus for drain rate","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should respect prayer bonus for drain rate"},{"ancestorTitles":["PrayerSystem","Prayer System Information"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer System Information should return all prayers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return all prayers"},{"ancestorTitles":["PrayerSystem","Prayer System Information"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer System Information should return available prayers based on level","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return available prayers based on level"},{"ancestorTitles":["PrayerSystem","Prayer System Information"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer System Information should return specific prayer by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return specific prayer by ID"},{"ancestorTitles":["PrayerSystem","Prayer System Information"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer System Information should return undefined for non-existent prayer","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return undefined for non-existent prayer"},{"ancestorTitles":["PrayerSystem","Max Prayer Points Update"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Max Prayer Points Update should update max prayer points when prayer level changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update max prayer points when prayer level changes"},{"ancestorTitles":["PrayerSystem","Max Prayer Points Update"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Max Prayer Points Update should cap current prayer points when max decreases","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should cap current prayer points when max decreases"},{"ancestorTitles":["PrayerSystem","Prayer Point Restoration and Draining"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Restoration and Draining should restore prayer points correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should restore prayer points correctly"},{"ancestorTitles":["PrayerSystem","Prayer Point Restoration and Draining"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Restoration and Draining should cap restoration at max prayer points","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should cap restoration at max prayer points"},{"ancestorTitles":["PrayerSystem","Prayer Point Restoration and Draining"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Restoration and Draining should drain prayer points correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should drain prayer points correctly"},{"ancestorTitles":["PrayerSystem","Prayer Point Restoration and Draining"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PrayerSystem Prayer Point Restoration and Draining should not drain below zero","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not drain below zero"}],"endTime":1750253582211,"message":"","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\PrayerSystem.test.ts","startTime":1750253572174,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Discord Token Endpoint"],"duration":130,"failureDetails":[{"message":"request to http://localhost:3001/api/discord/token failed, reason: ","type":"system","errno":"ECONNREFUSED","code":"ECONNREFUSED"}],"failureMessages":["FetchError: request to http://localhost:3001/api/discord/token failed, reason: \n    at ClientRequest.<anonymous> (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\node-fetch@2.7.0_encoding@0.1.13\\node_modules\\node-fetch\\lib\\index.js:1501:11)\n    at ClientRequest.emit (node:events:507:28)\n    at emitErrorEvent (node:_http_client:104:11)\n    at Socket.socketErrorListener (node:_http_client:518:5)\n    at Socket.emit (node:events:507:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)"],"fullName":"Discord Token Endpoint should respond with error when Discord credentials not configured","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond with error when Discord credentials not configured"},{"ancestorTitles":["Discord Token Endpoint"],"duration":4,"failureDetails":[{"message":"request to http://localhost:3001/api/discord/token failed, reason: ","type":"system","errno":"ECONNREFUSED","code":"ECONNREFUSED"}],"failureMessages":["FetchError: request to http://localhost:3001/api/discord/token failed, reason: \n    at ClientRequest.<anonymous> (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\node-fetch@2.7.0_encoding@0.1.13\\node_modules\\node-fetch\\lib\\index.js:1501:11)\n    at ClientRequest.emit (node:events:507:28)\n    at emitErrorEvent (node:_http_client:104:11)\n    at Socket.socketErrorListener (node:_http_client:518:5)\n    at Socket.emit (node:events:507:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)"],"fullName":"Discord Token Endpoint should respond with error when code is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respond with error when code is missing"},{"ancestorTitles":["Discord Token Endpoint"],"duration":2,"failureDetails":[{"message":"request to http://localhost:3001/api/discord/token failed, reason: ","type":"system","errno":"ECONNREFUSED","code":"ECONNREFUSED"}],"failureMessages":["FetchError: request to http://localhost:3001/api/discord/token failed, reason: \n    at ClientRequest.<anonymous> (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\node-fetch@2.7.0_encoding@0.1.13\\node_modules\\node-fetch\\lib\\index.js:1501:11)\n    at ClientRequest.emit (node:events:507:28)\n    at emitErrorEvent (node:_http_client:104:11)\n    at Socket.socketErrorListener (node:_http_client:518:5)\n    at Socket.emit (node:events:507:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)"],"fullName":"Discord Token Endpoint should accept POST requests with valid JSON structure","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should accept POST requests with valid JSON structure"}],"endTime":1750253582474,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDiscord Token Endpoint › should respond with error when Discord credentials not configured\u001b[39m\u001b[22m\n\n    FetchError: request to http://localhost:3001/api/discord/token failed, reason:\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ClientRequest.<anonymous> (\u001b[22m\u001b[2mnode_modules/.pnpm/node-fetch@2.7.0_encoding@0.1.13/node_modules/node-fetch/lib/index.js\u001b[2m:1501:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDiscord Token Endpoint › should respond with error when code is missing\u001b[39m\u001b[22m\n\n    FetchError: request to http://localhost:3001/api/discord/token failed, reason:\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ClientRequest.<anonymous> (\u001b[22m\u001b[2mnode_modules/.pnpm/node-fetch@2.7.0_encoding@0.1.13/node_modules/node-fetch/lib/index.js\u001b[2m:1501:11)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDiscord Token Endpoint › should accept POST requests with valid JSON structure\u001b[39m\u001b[22m\n\n    FetchError: request to http://localhost:3001/api/discord/token failed, reason:\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ClientRequest.<anonymous> (\u001b[22m\u001b[2mnode_modules/.pnpm/node-fetch@2.7.0_encoding@0.1.13/node_modules/node-fetch/lib/index.js\u001b[2m:1501:11)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\discord-endpoint.test.ts","startTime":1750253572114,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n\n    \u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n\n    \u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m271\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m431\u001b[0m         const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m505\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m542\u001b[0m   const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\ecs\\systems\\__tests__\\WaveCombatIntegration.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n\n    \u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n\n    \u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m271\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m431\u001b[0m         const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m505\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m542\u001b[0m   const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\ecs\\systems\\__tests__\\AutoCombatSystem.basic.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/game/ItemManager.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '@/logger' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import logger from '@/logger';\n    \u001b[7m \u001b[0m \u001b[91m                   ~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/ItemManager.ts\u001b[0m:\u001b[93m100\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m100\u001b[0m       if (!(await economyIntegration.isReady())) {\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/ItemManager.ts\u001b[0m:\u001b[93m106\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m106\u001b[0m       const items = await economyIntegration.getItems();\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\CombatSystemAction.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n\n    \u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n\n    \u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m271\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m431\u001b[0m         const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m505\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m542\u001b[0m   const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\ecs\\systems\\__tests__\\AutoCombatSystem.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/disabled-tests/GameRoom-mock.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"@colyseus/testing\"' has no exported member 'SimulatedClient'.\n\n    \u001b[7m4\u001b[0m import { ColyseusTestServer, SimulatedClient } from '@colyseus/testing';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/disabled-tests/GameRoom-mock.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../mocks/mock-schemas' or its corresponding type declarations.\n\n    \u001b[7m12\u001b[0m } from '../mocks/mock-schemas';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/disabled-tests/GameRoom-mock.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1 arguments, but got 0.\n\n    \u001b[7m37\u001b[0m     server = new ColyseusTestServer();\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/.pnpm/@colyseus+testing@0.16.3_@c_fc350956251cb7c17dcb0bdb623f5d17/node_modules/@colyseus/testing/build/TestServer.d.ts\u001b[0m:\u001b[93m22\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m22\u001b[0m     constructor(server: Server);\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'server' was not provided.\n    \u001b[96mpackages/server/src/server/__tests__/disabled-tests/GameRoom-mock.test.ts\u001b[0m:\u001b[93m170\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'proposer' does not exist on type 'Trade'. Did you mean 'proposerId'?\n\n    \u001b[7m170\u001b[0m       expect(createdTrade?.proposer).toBe(client.sessionId);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~\u001b[0m\n\n      \u001b[96mpackages/server/src/server/game/EntitySchemas.ts\u001b[0m:\u001b[93m487\u001b[0m:\u001b[93m26\u001b[0m\n        \u001b[7m487\u001b[0m   @type('string') public proposerId: string = '';\n        \u001b[7m   \u001b[0m \u001b[96m                         ~~~~~~~~~~\u001b[0m\n        'proposerId' is declared here.\n    \u001b[96mpackages/server/src/server/__tests__/disabled-tests/GameRoom-mock.test.ts\u001b[0m:\u001b[93m171\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'accepter' does not exist on type 'Trade'. Did you mean 'accepterId'?\n\n    \u001b[7m171\u001b[0m       expect(createdTrade?.accepter).toBe('player2_id');\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~~~\u001b[0m\n\n      \u001b[96mpackages/server/src/server/game/EntitySchemas.ts\u001b[0m:\u001b[93m488\u001b[0m:\u001b[93m26\u001b[0m\n        \u001b[7m488\u001b[0m   @type('string') public accepterId: string = '';\n        \u001b[7m   \u001b[0m \u001b[96m                         ~~~~~~~~~~\u001b[0m\n        'accepterId' is declared here.\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\disabled-tests\\GameRoom-mock.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/game/SurvivorWaveSystem.ts\u001b[0m:\u001b[93m720\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7052: \u001b[0mElement implicitly has an 'any' type because type 'MapSchema<NPC, string>' has no index signature. Did you mean to call 'get'?\n\n    \u001b[7m720\u001b[0m       if (enemyId && this.room.state.npcs[enemyId]) {\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/SurvivorWaveSystem.ts\u001b[0m:\u001b[93m721\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7052: \u001b[0mElement implicitly has an 'any' type because type 'MapSchema<NPC, string>' has no index signature. Did you mean to call 'get'?\n\n    \u001b[7m721\u001b[0m         delete this.room.state.npcs[enemyId];\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\SurvivorWaveSystem.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m30\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 3.\n\n    \u001b[7m30\u001b[0m     const result = startWoodcutting(world, playerId, treeId);\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m41\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 3.\n\n    \u001b[7m41\u001b[0m     startWoodcutting(world, playerId, treeId);\n    \u001b[7m  \u001b[0m \u001b[91m                                      ~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1 arguments, but got 2.\n\n    \u001b[7m48\u001b[0m     stopWoodcutting(world, playerId);\n    \u001b[7m  \u001b[0m \u001b[91m                           ~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'items' does not exist on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m56\u001b[0m     expect(Inventory.items[playerId]).toBeUndefined();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 3.\n\n    \u001b[7m59\u001b[0m     startWoodcutting(world, playerId, treeId);\n    \u001b[7m  \u001b[0m \u001b[91m                                      ~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 3.\n\n    \u001b[7m69\u001b[0m     const result = startWoodcutting(world, playerId, treeId);\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/__tests__/gathering-integration.test.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1 arguments, but got 2.\n\n    \u001b[7m73\u001b[0m     stopWoodcutting(world, playerId);\n    \u001b[7m  \u001b[0m \u001b[91m                           ~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\ecs\\__tests__\\gathering-integration.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/pure-colyseus-test.test.ts\u001b[0m:\u001b[93m62\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1 arguments, but got 0.\n\n    \u001b[7m62\u001b[0m       const encoder = new Encoder();\n    \u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/.pnpm/@colyseus+schema@3.0.39/node_modules/@colyseus/schema/lib/encoder/Encoder.d.ts\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m13\u001b[0m     constructor(state: T);\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~\u001b[0m\n        An argument for 'state' was not provided.\n    \u001b[96mpackages/server/src/server/__tests__/pure-colyseus-test.test.ts\u001b[0m:\u001b[93m97\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m97\u001b[0m       console.error('❌ Encoder creation/encoding failed:', error.message);\n    \u001b[7m  \u001b[0m \u001b[91m                                                           ~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/pure-colyseus-test.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m98\u001b[0m       console.error('Error stack:', error.stack);\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\pure-colyseus-test.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/simple-encoder-debug.test.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'MinimalTestSchema' is not assignable to parameter of type 'Iterator'.\n      Property 'offset' is missing in type 'MinimalTestSchema' but required in type 'Iterator'.\n\n    \u001b[7m21\u001b[0m       const encoded = encoder.encode(testSchema, {}, false);\n    \u001b[7m  \u001b[0m \u001b[91m                                     ~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/.pnpm/@colyseus+schema@3.0.39/node_modules/@colyseus/schema/lib/encoding/decode.d.ts\u001b[0m:\u001b[93m29\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m29\u001b[0m     offset: number;\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~\u001b[0m\n        'offset' is declared here.\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\simple-encoder-debug.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/simple-encoder-debug-v2.test.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m15\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2445: \u001b[0mProperty 'setState' is protected and only accessible within class 'Encoder<T>' and its subclasses.\n\n    \u001b[7m21\u001b[0m       encoder.setState(testSchema);\n    \u001b[7m  \u001b[0m \u001b[91m              ~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/simple-encoder-debug-v2.test.ts\u001b[0m:\u001b[93m22\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6234: \u001b[0mThis expression is not callable because it is a 'get' accessor. Did you mean to use it without '()'?\n      Type 'Boolean' has no call signatures.\n\n    \u001b[7m22\u001b[0m       const result = encoder.hasChanges();\n    \u001b[7m  \u001b[0m \u001b[91m                             ~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\simple-encoder-debug-v2.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["GameRoom Simple Test"],"duration":2407,"failureDetails":[{"name":"TSError","diagnosticText":"\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m540\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ weapon?: string | undefined; armor?: string | undefined; shield?: string | undefined; }'.\n  No index signature with a parameter of type 'string' was found on type '{ weapon?: string | undefined; armor?: string | undefined; shield?: string | undefined; }'.\n\n\u001b[7m540\u001b[0m       player.equipment[message.slot] = invItem.itemId;\n\u001b[7m   \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m644\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n\u001b[7m644\u001b[0m         proposerItemsMetadata: newTrade.proposerItems?.['Symbol(Symbol.metadata)'] !== undefined,\n\u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m645\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n\u001b[7m645\u001b[0m         accepterItemsMetadata: newTrade.accepterItems?.['Symbol(Symbol.metadata)'] !== undefined,\n\u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m663\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n\u001b[7m663\u001b[0m         proposerItemsMetadata: newTrade.proposerItems?.['Symbol(Symbol.metadata)'] !== undefined,\n\u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m664\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n\u001b[7m664\u001b[0m         accepterItemsMetadata: newTrade.accepterItems?.['Symbol(Symbol.metadata)'] !== undefined,\n\u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m730\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[7m730\u001b[0m       function logSchemaType(label, obj) {\n\u001b[7m   \u001b[0m \u001b[91m                             ~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m730\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'obj' implicitly has an 'any' type.\n\n\u001b[7m730\u001b[0m       function logSchemaType(label, obj) {\n\u001b[7m   \u001b[0m \u001b[91m                                    ~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m826\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m826\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(player.username);\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m829\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m829\u001b[0m             await economyIntegration.removeItemFromInventory(\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m985\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m985\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n\u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m990\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m990\u001b[0m             await economyIntegration.addItemToInventory(\n\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1014\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m1014\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n\u001b[7m    \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1019\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m1019\u001b[0m             await economyIntegration.addItemToInventory(\n\u001b[7m    \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1097\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m1097\u001b[0m             const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n\u001b[7m    \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1102\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n\u001b[7m1102\u001b[0m               await economyIntegration.addItemToInventory(\n\u001b[7m    \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n","diagnosticCodes":[7053,7015,7015,7015,7015,7006,7006,18048,18048,18048,18048,18048,18048,18048,18048]}],"failureMessages":[""],"fullName":"GameRoom Simple Test should be able to import GameRoom without errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should be able to import GameRoom without errors"},{"ancestorTitles":["GameRoom Simple Test"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"GameRoom Simple Test should be able to create schema instances","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should be able to create schema instances"},{"ancestorTitles":["GameRoom Simple Test"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"GameRoom Simple Test should be able to test encoding without Room","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should be able to test encoding without Room"}],"endTime":1750253583338,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGameRoom Simple Test › should be able to import GameRoom without errors\u001b[39m\u001b[22m\n\n\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\GameRoom-simple.test.ts","startTime":1750253572062,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/debug-metadata.test.ts\u001b[0m:\u001b[93m27\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'typeof DebugSchema'.\n      Property '[global.SymbolConstructor.metadata]' does not exist on type 'typeof DebugSchema'.\n\n    \u001b[7m27\u001b[0m     console.log('DebugSchema[Symbol.metadata]:', DebugSchema[Symbol.metadata]);\n    \u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/debug-metadata.test.ts\u001b[0m:\u001b[93m29\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'typeof DebugSchema'.\n      Property '[global.SymbolConstructor.metadata]' does not exist on type 'typeof DebugSchema'.\n\n    \u001b[7m29\u001b[0m     const metadata = DebugSchema[Symbol.metadata];\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/debug-metadata.test.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'typeof ManualSchema'.\n      Property '[global.SymbolConstructor.metadata]' does not exist on type 'typeof ManualSchema'.\n\n    \u001b[7m64\u001b[0m     console.log('Before decorator application:', ManualSchema[Symbol.metadata]);\n    \u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/debug-metadata.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'typeof ManualSchema'.\n      Property '[global.SymbolConstructor.metadata]' does not exist on type 'typeof ManualSchema'.\n\n    \u001b[7m69\u001b[0m       console.log('After decorator application:', ManualSchema[Symbol.metadata]);\n    \u001b[7m  \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/debug-metadata.test.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m71\u001b[0m       console.log('Decorator application failed:', error.message);\n    \u001b[7m  \u001b[0m \u001b[91m                                                   ~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\debug-metadata.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m30\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'name' does not exist on type 'Player'.\n\n    \u001b[7m30\u001b[0m     player.name = 'Test Player';\n    \u001b[7m  \u001b[0m \u001b[91m           ~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m36\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m36\u001b[0m     (economyIntegration.addItemToInventory as jest.Mock).mockClear();\n    \u001b[7m  \u001b[0m \u001b[91m     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m37\u001b[0m     (economyIntegration.removeItemFromInventory as jest.Mock).mockClear();\n    \u001b[7m  \u001b[0m \u001b[91m     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m38\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m38\u001b[0m     (economyIntegration.getOrCreatePlayerProfile as jest.Mock).mockClear();\n    \u001b[7m  \u001b[0m \u001b[91m     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m59\u001b[0m     await economyIntegration.addItemToInventory(123, 'sword', 1);\n    \u001b[7m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'string' is not assignable to parameter of type 'number'.\n\n    \u001b[7m59\u001b[0m     await economyIntegration.addItemToInventory(123, 'sword', 1);\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m61\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m61\u001b[0m     expect(economyIntegration.addItemToInventory).toHaveBeenCalled();\n    \u001b[7m  \u001b[0m \u001b[91m           ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m76\u001b[0m     await economyIntegration.removeItemFromInventory(123, 'shield', 1);\n    \u001b[7m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'string' is not assignable to parameter of type 'number'.\n\n    \u001b[7m76\u001b[0m     await economyIntegration.removeItemFromInventory(123, 'shield', 1);\n    \u001b[7m  \u001b[0m \u001b[91m                                                          ~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m78\u001b[0m     expect(economyIntegration.removeItemFromInventory).toHaveBeenCalled();\n    \u001b[7m  \u001b[0m \u001b[91m           ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m82\u001b[0m:\u001b[93m6\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m82\u001b[0m     (economyIntegration.addItemToInventory as jest.Mock).mockRejectedValueOnce(\n    \u001b[7m  \u001b[0m \u001b[91m     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m102\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m102\u001b[0m     await expect(economyIntegration.addItemToInventory(123, 'axe', 1)).rejects.toThrow('API Down');\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/loot-inventory-sync.test.ts\u001b[0m:\u001b[93m102\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'string' is not assignable to parameter of type 'number'.\n\n    \u001b[7m102\u001b[0m     await expect(economyIntegration.addItemToInventory(123, 'axe', 1)).rejects.toThrow('API Down');\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\loot-inventory-sync.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: {}, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'EconomyClient | undefined' is not assignable to parameter of type '{}'.\n          Type 'undefined' is not assignable to type '{}'.\n      Overload 2 of 3, '(object: {}, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'EconomyClient | undefined' is not assignable to parameter of type '{}'.\n          Type 'undefined' is not assignable to type '{}'.\n\n    \u001b[7m37\u001b[0m       jest.spyOn(economyClient, 'healthCheck').mockImplementation(async () => ({ status: 'ok' }));\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockImplementation' does not exist on type 'never'.\n\n    \u001b[7m37\u001b[0m       jest.spyOn(economyClient, 'healthCheck').mockImplementation(async () => ({ status: 'ok' }));\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m42\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m42\u001b[0m       expect(economyClient.healthCheck).toHaveBeenCalled();\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: {}, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'EconomyClient | undefined' is not assignable to parameter of type '{}'.\n          Type 'undefined' is not assignable to type '{}'.\n      Overload 2 of 3, '(object: {}, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'EconomyClient | undefined' is not assignable to parameter of type '{}'.\n          Type 'undefined' is not assignable to type '{}'.\n\n    \u001b[7m50\u001b[0m       jest.spyOn(economyClient, 'healthCheck').mockImplementation(async () => {\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m50\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockImplementation' does not exist on type 'never'.\n\n    \u001b[7m50\u001b[0m       jest.spyOn(economyClient, 'healthCheck').mockImplementation(async () => {\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m57\u001b[0m       expect(economyClient.healthCheck).toHaveBeenCalled();\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: {}, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'EconomyClient | undefined' is not assignable to parameter of type '{}'.\n          Type 'undefined' is not assignable to type '{}'.\n      Overload 2 of 3, '(object: {}, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'EconomyClient | undefined' is not assignable to parameter of type '{}'.\n          Type 'undefined' is not assignable to type '{}'.\n\n    \u001b[7m66\u001b[0m       jest.spyOn(economyClient, 'getPlayers').mockResolvedValueOnce([mockPlayer]);\n    \u001b[7m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'mockResolvedValueOnce' does not exist on type 'never'.\n\n    \u001b[7m66\u001b[0m       jest.spyOn(economyClient, 'getPlayers').mockResolvedValueOnce([mockPlayer]);\n    \u001b[7m  \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m71\u001b[0m       expect(economyClient.getPlayers).toHaveBeenCalledWith({ limit: 1, username: 'testPlayer' });\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m75\u001b[0m       expect(economyClient.getPlayers).toHaveBeenCalledTimes(1); // Should still be 1 if cached\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m85\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m85\u001b[0m       (economyClient.getPlayerInventory as jest.Mock).mockResolvedValue(mockInventory);\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m87\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'string' is not assignable to parameter of type 'number'.\n\n    \u001b[7m87\u001b[0m       const result = await economyIntegration.getPlayerInventory('testPlayer');\n    \u001b[7m  \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m90\u001b[0m       expect(economyClient.getPlayerInventory).toHaveBeenCalledWith('testPlayer');\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m97\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m97\u001b[0m       (economyClient.addInventoryItem as jest.Mock).mockResolvedValue(mockAddResult);\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m102\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m102\u001b[0m       expect(economyClient.addInventoryItem).toHaveBeenCalledWith(1, {\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m117\u001b[0m       (economyClient.getItemPriceHistory as jest.Mock).mockResolvedValue(mockPriceHistory);\n    \u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m122\u001b[0m       expect(economyClient.getItemPriceHistory).toHaveBeenCalledWith(1);\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m126\u001b[0m       (economyClient.getItemPriceHistory as jest.Mock).mockResolvedValue([]);\n    \u001b[7m   \u001b[0m \u001b[91m       ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/economy-integration.test.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyClient' is possibly 'undefined'.\n\n    \u001b[7m131\u001b[0m       expect(economyClient.getItemPriceHistory).toHaveBeenCalledWith(1);\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\economy-integration.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/clean-game-room.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"@colyseus/testing\"' has no exported member 'SimulatedClient'.\n\n    \u001b[7m5\u001b[0m import { ColyseusTestServer, SimulatedClient } from '@colyseus/testing';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/clean-game-room.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1 arguments, but got 0.\n\n    \u001b[7m12\u001b[0m     colyseus = new ColyseusTestServer();\n    \u001b[7m  \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/.pnpm/@colyseus+testing@0.16.3_@c_fc350956251cb7c17dcb0bdb623f5d17/node_modules/@colyseus/testing/build/TestServer.d.ts\u001b[0m:\u001b[93m22\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m22\u001b[0m     constructor(server: Server);\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'server' was not provided.\n    \u001b[96mpackages/server/src/server/__tests__/clean-game-room.test.ts\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'listen' does not exist on type 'ColyseusTestServer'.\n\n    \u001b[7m13\u001b[0m     await colyseus.listen(2568);\n    \u001b[7m  \u001b[0m \u001b[91m                   ~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/clean-game-room.test.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'defineRoomType' does not exist on type 'ColyseusTestServer'.\n\n    \u001b[7m21\u001b[0m     await colyseus.defineRoomType('clean_game', CleanGameRoom);\n    \u001b[7m  \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\clean-game-room.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/test/multiplayerSync.test.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ broadcast: (type: string, payload: any) => void; getMessages: () => any[]; }' is not assignable to parameter of type 'Server'.\n      Type '{ broadcast: (type: string, payload: any) => void; getMessages: () => any[]; }' is missing the following properties from type 'Server': define, attach, listen\n\n    \u001b[7m20\u001b[0m     broadcastPlayerState(dummyServer, playerId, playerState);\n    \u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/test/multiplayerSync.test.ts\u001b[0m:\u001b[93m33\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ broadcast: (type: string, payload: any) => void; getMessages: () => any[]; }' is not assignable to parameter of type 'Server'.\n      Type '{ broadcast: (type: string, payload: any) => void; getMessages: () => any[]; }' is missing the following properties from type 'Server': define, attach, listen\n\n    \u001b[7m33\u001b[0m     syncAllPlayerStates(dummyServer, allPlayerStates);\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\test\\multiplayerSync.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/services/economy-client.test.ts\u001b[0m:\u001b[93m227\u001b[0m:\u001b[93m69\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ item_id: number; quantity: number; }' is not assignable to parameter of type 'Omit<InventoryItem, \"id\" | \"acquired_at\">'.\n      Property 'player_id' is missing in type '{ item_id: number; quantity: number; }' but required in type 'Omit<InventoryItem, \"id\" | \"acquired_at\">'.\n\n    \u001b[7m227\u001b[0m       const inventoryItem = await economyClient.addInventoryItem(1, { item_id: 3, quantity: 5 });\n    \u001b[7m   \u001b[0m \u001b[91m                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mpackages/server/src/services/economy-client.ts\u001b[0m:\u001b[93m36\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m36\u001b[0m   player_id: number;\n        \u001b[7m  \u001b[0m \u001b[96m  ~~~~~~~~~\u001b[0m\n        'player_id' is declared here.\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\services\\economy-client.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Core Functionality Tests","Basic Imports"],"duration":1471,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TSError\"\u001b[39m\nError message: \u001b[31m\"\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \\\"ui8\\\"; defence: \\\"ui8\\\"; strength: \\\"ui8\\\"; hitpoints: \\\"ui8\\\"; ranged: \\\"ui8\\\"; prayer: \\\"ui8\\\"; magic: \\\"ui8\\\"; cooking: \\\"ui8\\\"; woodcutting: \\\"ui8\\\"; fletching: \\\"ui8\\\"; fishing: \\\"ui8\\\"; firemaking: \\\"ui8\\\"; ... 10 more ...; construction: \\\"ui8\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \\\"ui8\\\"; defence: \\\"ui8\\\"; strength: \\\"ui8\\\"; hitpoints: \\\"ui8\\\"; ranged: \\\"ui8\\\"; prayer: \\\"ui8\\\"; magic: \\\"ui8\\\"; cooking: \\\"ui8\\\"; woodcutting: \\\"ui8\\\"; fletching: \\\"ui8\\\"; fishing: \\\"ui8\\\"; firemaking: \\\"ui8\\\"; ... 10 more ...; construction: \\\"ui8\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \\\"i16\\\"; attackSlash: \\\"i16\\\"; attackCrush: \\\"i16\\\"; attackMagic: \\\"i16\\\"; attackRanged: \\\"i16\\\"; defenceStab: \\\"i16\\\"; defenceSlash: \\\"i16\\\"; defenceCrush: \\\"i16\\\"; defenceMagic: \\\"i16\\\"; defenceRanged: \\\"i16\\\"; meleeStrength: \\\"i16\\\"; rangedStrength: \\\"i16\\\"; magicDamage: \\\"i16\\\"; prayer: \\\"i16\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \\\"i16\\\"; attackSlash: \\\"i16\\\"; attackCrush: \\\"i16\\\"; attackMagic: \\\"i16\\\"; attackRanged: \\\"i16\\\"; defenceStab: \\\"i16\\\"; defenceSlash: \\\"i16\\\"; defenceCrush: \\\"i16\\\"; defenceMagic: \\\"i16\\\"; defenceRanged: \\\"i16\\\"; meleeStrength: \\\"i16\\\"; rangedStrength: \\\"i16\\\"; magicDamage: \\\"i16\\\"; prayer: \\\"i16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m271\u001b[0m       const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m431\u001b[0m         const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m505\u001b[0m       const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m542\u001b[0m   const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\"\u001b[39m\n\n","pass":true}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TSError\"\u001b[39m\nError message: \u001b[31m\"\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \\\"ui8\\\"; defence: \\\"ui8\\\"; strength: \\\"ui8\\\"; hitpoints: \\\"ui8\\\"; ranged: \\\"ui8\\\"; prayer: \\\"ui8\\\"; magic: \\\"ui8\\\"; cooking: \\\"ui8\\\"; woodcutting: \\\"ui8\\\"; fletching: \\\"ui8\\\"; fishing: \\\"ui8\\\"; firemaking: \\\"ui8\\\"; ... 10 more ...; construction: \\\"ui8\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \\\"ui8\\\"; defence: \\\"ui8\\\"; strength: \\\"ui8\\\"; hitpoints: \\\"ui8\\\"; ranged: \\\"ui8\\\"; prayer: \\\"ui8\\\"; magic: \\\"ui8\\\"; cooking: \\\"ui8\\\"; woodcutting: \\\"ui8\\\"; fletching: \\\"ui8\\\"; fishing: \\\"ui8\\\"; firemaking: \\\"ui8\\\"; ... 10 more ...; construction: \\\"ui8\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \\\"i16\\\"; attackSlash: \\\"i16\\\"; attackCrush: \\\"i16\\\"; attackMagic: \\\"i16\\\"; attackRanged: \\\"i16\\\"; defenceStab: \\\"i16\\\"; defenceSlash: \\\"i16\\\"; defenceCrush: \\\"i16\\\"; defenceMagic: \\\"i16\\\"; defenceRanged: \\\"i16\\\"; meleeStrength: \\\"i16\\\"; rangedStrength: \\\"i16\\\"; magicDamage: \\\"i16\\\"; prayer: \\\"i16\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \\\"i16\\\"; attackSlash: \\\"i16\\\"; attackCrush: \\\"i16\\\"; attackMagic: \\\"i16\\\"; attackRanged: \\\"i16\\\"; defenceStab: \\\"i16\\\"; defenceSlash: \\\"i16\\\"; defenceCrush: \\\"i16\\\"; defenceMagic: \\\"i16\\\"; defenceRanged: \\\"i16\\\"; meleeStrength: \\\"i16\\\"; rangedStrength: \\\"i16\\\"; magicDamage: \\\"i16\\\"; prayer: \\\"i16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m271\u001b[0m       const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m431\u001b[0m         const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m505\u001b[0m       const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m542\u001b[0m   const item = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n\u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n\u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n\u001b[31m\u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n\u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\"\u001b[39m\n\n\n    at Object.<anonymous> (C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\core-functionality.test.ts:14:14)\n    at Promise.then.completed (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\aggis\\GitHub\\runerogue\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Core Functionality Tests Basic Imports should import core modules without errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should import core modules without errors"},{"ancestorTitles":["Core Functionality Tests","Basic Imports"],"duration":506,"failureDetails":[],"failureMessages":[],"fullName":"Core Functionality Tests Basic Imports should import OSRS data without errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should import OSRS data without errors"},{"ancestorTitles":["Core Functionality Tests","Basic Imports"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Core Functionality Tests Basic Imports should verify schema metadata fix is working","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should verify schema metadata fix is working"}],"endTime":1750253583839,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCore Functionality Tests › Basic Imports › should import core modules without errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Error name:    \u001b[31m\"TSError\"\u001b[39m\n    Error message: \u001b[31m\"\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \\\"ui8\\\"; defence: \\\"ui8\\\"; strength: \\\"ui8\\\"; hitpoints: \\\"ui8\\\"; ranged: \\\"ui8\\\"; prayer: \\\"ui8\\\"; magic: \\\"ui8\\\"; cooking: \\\"ui8\\\"; woodcutting: \\\"ui8\\\"; fletching: \\\"ui8\\\"; fishing: \\\"ui8\\\"; firemaking: \\\"ui8\\\"; ... 10 more ...; construction: \\\"ui8\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \\\"ui8\\\"; defence: \\\"ui8\\\"; strength: \\\"ui8\\\"; hitpoints: \\\"ui8\\\"; ranged: \\\"ui8\\\"; prayer: \\\"ui8\\\"; magic: \\\"ui8\\\"; cooking: \\\"ui8\\\"; woodcutting: \\\"ui8\\\"; fletching: \\\"ui8\\\"; fishing: \\\"ui8\\\"; firemaking: \\\"ui8\\\"; ... 10 more ...; construction: \\\"ui8\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \\\"i16\\\"; attackSlash: \\\"i16\\\"; attackCrush: \\\"i16\\\"; attackMagic: \\\"i16\\\"; attackRanged: \\\"i16\\\"; defenceStab: \\\"i16\\\"; defenceSlash: \\\"i16\\\"; defenceCrush: \\\"i16\\\"; defenceMagic: \\\"i16\\\"; defenceRanged: \\\"i16\\\"; meleeStrength: \\\"i16\\\"; rangedStrength: \\\"i16\\\"; magicDamage: \\\"i16\\\"; prayer: \\\"i16\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \\\"i16\\\"; attackSlash: \\\"i16\\\"; attackCrush: \\\"i16\\\"; attackMagic: \\\"i16\\\"; attackRanged: \\\"i16\\\"; defenceStab: \\\"i16\\\"; defenceSlash: \\\"i16\\\"; defenceCrush: \\\"i16\\\"; defenceMagic: \\\"i16\\\"; defenceRanged: \\\"i16\\\"; meleeStrength: \\\"i16\\\"; rangedStrength: \\\"i16\\\"; magicDamage: \\\"i16\\\"; prayer: \\\"i16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m271\u001b[0m       const item = Item[itemEntityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m431\u001b[0m         const item = Item[itemEntityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m505\u001b[0m       const item = Item[itemEntityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \\\"eid\\\"; helmet: \\\"eid\\\"; chest: \\\"eid\\\"; legs: \\\"eid\\\"; shield: \\\"eid\\\"; gloves: \\\"eid\\\"; boots: \\\"eid\\\"; ring: \\\"eid\\\"; amulet: \\\"eid\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m542\u001b[0m   const item = Item[itemEntityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \\\"ui16\\\"; quantity: \\\"ui16\\\"; noted: \\\"ui8\\\"; charges: \\\"ui16\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\u001b[39m\n    \u001b[31m\u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.\u001b[39m\n    \u001b[31m  No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \\\"eid\\\"; slot1: \\\"eid\\\"; slot2: \\\"eid\\\"; slot3: \\\"eid\\\"; slot4: \\\"eid\\\"; slot5: \\\"eid\\\"; slot6: \\\"eid\\\"; slot7: \\\"eid\\\"; slot8: \\\"eid\\\"; slot9: \\\"eid\\\"; slot10: \\\"eid\\\"; slot11: \\\"eid\\\"; slot12: \\\"eid\\\"; slot13: \\\"eid\\\"; slot14: \\\"eid\\\"; ... 12 more ...; slot27: \\\"eid\\\"; }>'.·\u001b[39m\n    \u001b[31m\u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\u001b[39m\n    \u001b[31m\u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m         \u001b[36mconst\u001b[39m { \u001b[33mECSIntegration\u001b[39m } \u001b[33m=\u001b[39m require(\u001b[32m'../game/ECSIntegration'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m         expect(\u001b[33mECSIntegration\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 14 |\u001b[39m       })\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     it(\u001b[32m'should import OSRS data without errors'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mpackages/server/src/server/__tests__/core-functionality.test.ts\u001b[39m\u001b[0m\u001b[2m:14:14)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\core-functionality.test.ts","startTime":1750253572181,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/__tests__/game/GameRoom.test.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type 'Room<GameState>' to type 'Client' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\n      Type 'Room<GameState>' is missing the following properties from type 'Client': id, error\n\n    \u001b[7m221\u001b[0m       client = (await colyseus.connectTo(room, { name: 'TestPlayer' })) as Client;\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/game/GameRoom.test.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type 'Room<GameState>' to type 'Client' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\n      Type 'Room<GameState>' is missing the following properties from type 'Client': id, error\n\n    \u001b[7m267\u001b[0m       client = (await colyseus.connectTo(room, { name: 'TestPlayer' })) as Client;\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/game/GameRoom.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type 'Room<GameState>' to type 'Client' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\n      Type 'Room<GameState>' is missing the following properties from type 'Client': id, error\n\n    \u001b[7m354\u001b[0m       client1 = (await colyseus.connectTo(room, { name: 'Player1' })) as Client;\n    \u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/game/GameRoom.test.ts\u001b[0m:\u001b[93m355\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type 'Room<GameState>' to type 'Client' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\n      Type 'Room<GameState>' is missing the following properties from type 'Client': id, error\n\n    \u001b[7m355\u001b[0m       client2 = (await colyseus.connectTo(room, { name: 'Player2' })) as Client;\n    \u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/__tests__/game/GameRoom.test.ts\u001b[0m:\u001b[93m714\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type 'Room<GameState>' to type 'Client' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\n      Type 'Room<GameState>' is missing the following properties from type 'Client': id, error\n\n    \u001b[7m714\u001b[0m       client = (await colyseus.connectTo(room, { name: 'TestPlayer' })) as Client;\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\GameRoom.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m221\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attack: \"ui8\"; defence: \"ui8\"; strength: \"ui8\"; hitpoints: \"ui8\"; ranged: \"ui8\"; prayer: \"ui8\"; magic: \"ui8\"; cooking: \"ui8\"; woodcutting: \"ui8\"; fletching: \"ui8\"; fishing: \"ui8\"; firemaking: \"ui8\"; ... 10 more ...; construction: \"ui8\"; }>'.\n\n    \u001b[7m221\u001b[0m   const skills = SkillLevels[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m236\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m236\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m237\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ attackStab: \"i16\"; attackSlash: \"i16\"; attackCrush: \"i16\"; attackMagic: \"i16\"; attackRanged: \"i16\"; defenceStab: \"i16\"; defenceSlash: \"i16\"; defenceCrush: \"i16\"; defenceMagic: \"i16\"; defenceRanged: \"i16\"; meleeStrength: \"i16\"; rangedStrength: \"i16\"; magicDamage: \"i16\"; prayer: \"i16\"; }>'.\n\n    \u001b[7m237\u001b[0m   const bonuses = EquipmentBonuses[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m271\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m271\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m389\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m389\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m431\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m431\u001b[0m         const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m470\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m470\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m505\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m505\u001b[0m       const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m533\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m533\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m534\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ weapon: \"eid\"; helmet: \"eid\"; chest: \"eid\"; legs: \"eid\"; shield: \"eid\"; gloves: \"eid\"; boots: \"eid\"; ring: \"eid\"; amulet: \"eid\"; }>'.\n\n    \u001b[7m534\u001b[0m   const equipment = Equipment[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m542\u001b[0m   const item = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m601\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m601\u001b[0m   const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m711\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ itemId: \"ui16\"; quantity: \"ui16\"; noted: \"ui8\"; charges: \"ui16\"; }>'.\n\n    \u001b[7m711\u001b[0m       const itemData = Item[itemEntityId];\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/ecs/systems/EquipmentSystem.ts\u001b[0m:\u001b[93m800\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'number' can't be used to index type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n      No index signature with a parameter of type 'number' was found on type 'ComponentType<{ slot0: \"eid\"; slot1: \"eid\"; slot2: \"eid\"; slot3: \"eid\"; slot4: \"eid\"; slot5: \"eid\"; slot6: \"eid\"; slot7: \"eid\"; slot8: \"eid\"; slot9: \"eid\"; slot10: \"eid\"; slot11: \"eid\"; slot12: \"eid\"; slot13: \"eid\"; slot14: \"eid\"; ... 12 more ...; slot27: \"eid\"; }>'.\n\n    \u001b[7m800\u001b[0m   const inventory = Inventory[entityId];\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\ecs\\__tests__\\ecs-integration.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m540\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ weapon?: string | undefined; armor?: string | undefined; shield?: string | undefined; }'.\n      No index signature with a parameter of type 'string' was found on type '{ weapon?: string | undefined; armor?: string | undefined; shield?: string | undefined; }'.\n\n    \u001b[7m540\u001b[0m       player.equipment[message.slot] = invItem.itemId;\n    \u001b[7m   \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m644\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m644\u001b[0m         proposerItemsMetadata: newTrade.proposerItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m645\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m645\u001b[0m         accepterItemsMetadata: newTrade.accepterItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m663\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m663\u001b[0m         proposerItemsMetadata: newTrade.proposerItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m664\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m664\u001b[0m         accepterItemsMetadata: newTrade.accepterItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m730\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n    \u001b[7m730\u001b[0m       function logSchemaType(label, obj) {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m730\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'obj' implicitly has an 'any' type.\n\n    \u001b[7m730\u001b[0m       function logSchemaType(label, obj) {\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m826\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m826\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(player.username);\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m829\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m829\u001b[0m             await economyIntegration.removeItemFromInventory(\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m985\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m985\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m990\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m990\u001b[0m             await economyIntegration.addItemToInventory(\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1014\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1014\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n    \u001b[7m    \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1019\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1019\u001b[0m             await economyIntegration.addItemToInventory(\n    \u001b[7m    \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1097\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1097\u001b[0m             const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n    \u001b[7m    \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1102\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1102\u001b[0m               await economyIntegration.addItemToInventory(\n    \u001b[7m    \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\GameRoom.simple.test.ts","startTime":1750253592325,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750253592325,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m540\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ weapon?: string | undefined; armor?: string | undefined; shield?: string | undefined; }'.\n      No index signature with a parameter of type 'string' was found on type '{ weapon?: string | undefined; armor?: string | undefined; shield?: string | undefined; }'.\n\n    \u001b[7m540\u001b[0m       player.equipment[message.slot] = invItem.itemId;\n    \u001b[7m   \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m644\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m644\u001b[0m         proposerItemsMetadata: newTrade.proposerItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m645\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m645\u001b[0m         accepterItemsMetadata: newTrade.accepterItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m663\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m663\u001b[0m         proposerItemsMetadata: newTrade.proposerItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m664\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7015: \u001b[0mElement implicitly has an 'any' type because index expression is not of type 'number'.\n\n    \u001b[7m664\u001b[0m         accepterItemsMetadata: newTrade.accepterItems?.['Symbol(Symbol.metadata)'] !== undefined,\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m730\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n    \u001b[7m730\u001b[0m       function logSchemaType(label, obj) {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m730\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'obj' implicitly has an 'any' type.\n\n    \u001b[7m730\u001b[0m       function logSchemaType(label, obj) {\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m826\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m826\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(player.username);\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m829\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m829\u001b[0m             await economyIntegration.removeItemFromInventory(\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m985\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m985\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m990\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m990\u001b[0m             await economyIntegration.addItemToInventory(\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1014\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1014\u001b[0m           const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n    \u001b[7m    \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1019\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1019\u001b[0m             await economyIntegration.addItemToInventory(\n    \u001b[7m    \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1097\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1097\u001b[0m             const economyProfile = await economyIntegration.getOrCreatePlayerProfile(\n    \u001b[7m    \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mpackages/server/src/server/game/GameRoom.ts\u001b[0m:\u001b[93m1102\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'economyIntegration' is possibly 'undefined'.\n\n    \u001b[7m1102\u001b[0m               await economyIntegration.addItemToInventory(\n    \u001b[7m    \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"C:\\Users\\aggis\\GitHub\\runerogue\\packages\\server\\src\\server\\__tests__\\game\\GameRoom-inventory-debug.test.ts","startTime":1750253592325,"status":"failed","summary":""}],"wasInterrupted":false}
